name: Deploy to Environment


# Triggers, on specific branches
on:
  push:
    branches:
      - main
      - release
      - develop    
env:
  # where checked out to:
  REPO_LIB_DIR: "DeploymentLib"
  LIB_BICEP_DIRECTORY: "DeploymentLib/SOURCE/infrastructure/azure/bicep/recipes"   
  MAIN_BICEP_FILENAME: "backend-deployment.bicep"


# Running on one runner:      
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: NP
    env:
      # ======================================================================
      # FIXED (CONTEXT):
      # ======================================================================
      # where imported repo should go
      # File that this YAML invokes at some point, along with its params
      # MAIN_BICEP_FILENAME: 'dynamic-app-service.bicep'
      # MAIN_BICEP_PARAM_FILENAME: 'main.service-client.bicepparam'
      # ======================================================================
      # INPUTS:
      # ======================================================================
      # IMPORTANT:

      # PROJECT NAME which is basis of Azure resource names.
      PROJECT_NAME: 'BASE'
      # Angular Code Name (affects where code ends up in dist/xxx)
      # ======================================================================

    steps:
      # ==================================================
      - name: "Summarise Context Before Starting"
        run: |
          echo "::group::Misc"
          echo "${{env.REPO_LIB_DIR}}"
          echo "${{env.LIB_REPO_SRC_URL}}"
          echo "${{env.MAIN_BICEP_FILENAME}}"
          echo "${{env.PROJECT_NAME}}"
          echo "${{env.PROJECT_SERVICE_NAME}}"
          echo "${{vars.PROJECT_NAME}}"
          echo "${{vars.PROJECT_SERVICE_NAME}}"
          echo "${{vars.AZURE_LOCATION_ID_0}}"
          echo "${{vars.AZURE_LOCATION_ID_1}}"
          echo "${{vars.AZURE_LOCATION_ID_2}}"
          echo "${{vars.AZURE_LOCATION_ID_3}}"
          
          echo "::endgroup::"
  
      # ==================================================
      # Checkout code from *this* repo
      # onto runner (not target SWA...)
      # without giving directory, so default:
      - name: Checkout this Project's Repo
        uses: actions/checkout@v4
        # Optional to specify repo:
        # with:
        #  repository: ${{env.THIS_REPO}}

      # ==================================================
      # Login to Azure, in order to manipulate remote resources
      - name: Azure Login, using Action, to enable building resources
        uses: azure/login@v2
        with:
          creds: ${{ secrets.NP_AZURE_ENTRA_APP_CLIENT_CREDS}} 

          
      # ==================================================
      # Checkout code from *lib* repo
      # to a directory parallel to this repo's code
      - name: Checkout Library Repo
        uses: actions/checkout@v4
        with:
          repository: "skysgh/resources.deployments.lib"  
          path: ${{env.REPO_LIB_DIR}}

  
      - name: Explain 1!
        run: |
          echo "pwd:"
          pwd
      - name: Explain 2!
        run: |
          echo "file:"
          ls -la ${{ env.LIB_BICEP_DIRECTORY }}/${{env.MAIN_BICEP_FILENAME}}    
          
      - name: Explain!
        run: |
          echo "Structure of work folder of this pipeline:"
          tree '${{env.REPO_LIB_DIR}}'
      # ==================================================
      - name: Run main bicep file (creating RG & WEB APP SERVER, SQL SERVER, etc.)
        uses: azure/arm-deploy@v1
        with:
          scope: subscription
          region: ${{ vars.AZURE_LOCATION_ID_2 }}
          subscriptionId: ${{ secrets.NP_AZURE_SUBSCRIPTION_ID }}
          
          template: "${{ env.LIB_BICEP_DIRECTORY }}/${{env.MAIN_BICEP_FILENAME}}"   
 
          # Consider: sqlServerDbResourxeLocationId: 'F1','D1','B1','B2','S1','S2'
          # Consider: sqlServerDbResourceSKU: 'Basic', 'S0', 'S1', 'S2'
          # Consider: webServerFarmsResourceSKU can't be Shared/D1 if Linux is used
          # 
          # Do NOT wrap values in single quotes (only double quotes if need be)
          # Do NOT inject blank lines.

          # "${{ env.PROJECT_ENV_ID}}"
          
          parameters: >
            buildResourceGroup=true
            projectName="${{ env.PROJECT_NAME }}"
            projectServiceName="${{ vars.PROJECT_SERVICE_NAME }}"
            environmentId="NP"
            defaultResourceLocationId="${{ vars.AZURE_LOCATION_ID_2 }}"
            logicResourceGroupLocationId="${{ vars.AZURE_LOCATION_ID_2 }}"
            webServerFarmsResourceLocationId="${{ vars.AZURE_LOCATION_ID_2 }}"  
            webServerFarmsResourceSKU="S1"
            webSitesHttpOnly=true
            webSitesIdentityType="SystemAssigned"
            webSitesLinuxFxVersion="DOTNETCORE|Latest"
            webSitesSourceControlsRepositoryUrl="https://todo"
            webSitesSourceControlsRepositoryBranch="main"
            webSitesSourceControlsRepositoryToken="${{ secrets.GH_BASE_CLIENT_THEMED }}"
            webSitesSourceControlsRepositorySourceLocation="/"
            dataResourceGroupLocationId="${{ vars.AZURE_LOCATION_ID_2 }}"
            sqlServerResourceLocationId="${{ vars.AZURE_LOCATION_ID_2 }}"
            sqlServerMinimalTlsVersion="1.2"
            sqlServerIdentityType="None"
            sqlServerAdminUserName="${{secrets.DB_ADMIN_NAME}}"
            sqlServerAdminPassword="${{secrets.DB_ADMIN_PWD}}"
            sqlServerDbResourceName="Default"
            sqlServerDbResourceLocationId="${{ vars.AZURE_LOCATION_ID_2 }}"
            sqlServerDbResourceSKU="S1"
            sqlServerDbResourceTier="Standard"
            sqlServerDbAvailabilityZone="NoPreference"
            sqlServerDbZoneRedundant=false
            sqlServerDbUseFreeLimit=false
            sqlServerDbFreeLimitExhaustionBehavior="BillOverUsage"
            sqlServerDbAutoPauseDelay=120
            sqlServerDbSampleName=""
            sqlServerDbIsLedgerOn=true
            sqlServerDbCreateMode="Default"
            sqlServerDbCollation="SQL_Latin1_General_CP1_CI_AS"
            sqlServerDbCatalogCollation="DATABASE_DEFAULT"
            
          # Removed
          #  repositoryToken="${{ secrets.GH_BASE_CLIENT_THEMED }}"

          failOnStdErr: false