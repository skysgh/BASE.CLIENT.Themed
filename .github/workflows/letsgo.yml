name: Deploy to Environment

# Triggers, on specific branches
on:
  push:
    branches:
      - main
      - release
      - develop

# Running on one runner:      
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # BRANCH INFO
      BRANCH: ${{ github.ref }}
      BRANCH_ID: '000'
      # ENVIRONMANT INFO: it's either BT, DT, ST, UT, IT, TR, PP, PR
      ENVIRONMENT_NAME: 'Build Test'
      ENVIRONMENT_ID: 'BT' # Default to 'BT' 
      # DEFINE REPO CONSTANTS
      REPO_NAME_LIB: 'skysgh/resources.deployments.lib'
      REPO_NAME_SRC: $GITHUB_REPOSITORY
      # AZURE CREDENTIALS INFO:
      AZURE_CREDENTIAL_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_OIDC_CLIENT_ID: 'fux.....'
      AZURE_OIDC_SUBSCRIPTION_ID: 'fux.....'
      # AZURE RESOURCES INFO:
      AZURE_LOCATION_1: 'centralaustralia'
      AZURE_LOCATION_2: 'southeastasia'
      AZURE_LOCATION_3: 'global'
    steps:
      # Checkout code from *lib* repo
      # to a directory parallel to this repo's code
      - name: Show Environment Info
        run: echo ${{env.REPO_NAME_SRC}}

      # Checkout code from *lib* repo
      # to a directory parallel to this repo's code
      - name: Checkout Library Repo
        uses: actions/checkout@v2
        with:
          repository: ${{env.REPO_NAME_LIB}}
          path: './DeploymentLib'

    #   Already done.
    #   # Checkout code from *this* repo
    #   # without giving directory, so default:
    #   - name: Checkout Project Repo
    #     uses: actions/checkout@v2
    #     with:
    #       repository: ${{env.REPO_NAME_SRC}}
  
      - name: Determine Deployment Context
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/release' ]]; then
            echo "Setting environment to 'Prod (PR)'."
            export GITHUB_ENV='PR'
          else
            echo "Setting environment to 'Non Prod (NP)'."
            export GITHUB_ENV='NP'
          fi
          export AZURE_ENTRA_CREDS = ${{secrets.AZURE_ENTRA_APP_CLIENT_CREDS}}

      # Checkout code from *lib* repo
      # to a directory parallel to this repo's code
      
      - name: "Summarise Context Before Starting"
        run: |
          echo "Actor"
          echo "Initiator"
          echo "=================="
          echo "Actor............: '${GITHUB_ACTOR}'"
          echo "Event............: '${GITHUB_EVENT_NAME}'"
          echo ""
          echo "Directories"
          echo "=================="
          echo "Home.............: '${HOME}'"
          echo "Workspace........: '${GITHUB_WORKSPACE}'"
          echo ""
          echo "Libraries"
          echo "=================="
          echo "Repo.Lib..........: '${{env.REPO_NAME_LIB}}'"
          echo ""
          echo "Repo Branch"
          echo "=================="
          echo "Repo.Scr.............: '${{env.GITHUB_REPOSITORY}}'"
          echo "Branch.Name..........: '${{env.BRANCH}}'"
          echo "Branch.Ref...........: '${{github.GITHUB_REF}}'"
          echo "Branch.Number........: '${{env.BRANCH_ID}}'"
          echo ""
          echo "Env"
          echo "======================"
          echo "Env.Name.............: '${{env.ENVIRONMENT_NAME}}'"
          echo "Env.Id...............: '${{env.ENVIRONMENT_ID}}'"
          echo ""
          echo "Entra"
          echo "======================"
          echo "Entra.TenantId.......: '${{secrets.GITHUB_TOKEN}}'"
          echo "Entra.AppClientId....: '${{secrets.GITHUB_TOKEN}}'"
          echo "Entra.AppClient Creds: '${{env.AZURE_ENTRA_CREDS}}'"
          echo ""
          echo "Azure"
          echo "======================"
          echo "Azure.SubscriptionId.: '${{secrets.GITHUB_TOKEN}}'"
          echo "Azure.Location.1.....: '${{env.AZURE_LOCATION_1}}'"
          echo "Azure.Location.2.....: '${{env.AZURE_LOCATION_2}}'"
          echo "Azure.Location.3.....: '${{env.AZURE_LOCATION_3}}'"
      - name: Azure Login using Action - S
        uses: azure/login@v1
        with:
          creds: ${{ secrets.FUCK_A_DUCK }}

      - name: Azure Login using Action - OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_OIDC_CLIENT_ID }}
          subscription-id: ${{ env.AZURE_OIDC_SUBSCRIPTION_ID }}
          tenant-id: ${{ env.AZURE_OIDC_TENANT_ID }}
          creds: ${{ secrets.FUCK_A_DUCK }}
  
      - name: Ensure Resource Group(s)
        run: |
          # Your deployment commands here

      - name: Ensure Static WebSite Resource
        run: |
          # Your deployment commands here

      - name: Compile source code
        run: |

      - name: Take offline
        run: |

      - name: Deploy source code
        run: |

      - name: Wake
        run: |

      - name: Bring back online
        run: |
