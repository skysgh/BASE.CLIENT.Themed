name: Deploy to Environment

# Triggers, on specific branches
on:
  push:
    branches:
      - main
      - release
      - develop


# Running on one runner:      
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: NP
    env:
      # IMPORTANT:
      # PAT expires Expires on Tue, Dec 31 2024.

      # PROJECT NAME which is basis of resource names.
      PROJECT_NAME: 'BASIL'
      PROJECT_CODE_NAME: 'base'
      # REPO #1 (SRC) INFO
      REPO_SITE: 'https://github.com/skysgh/BASE.Jump.Dev.Client.Themed'
      REPO_NAME_SRC: ${{ github.repository }}
      # REPO #2 (LIB) INFO (FOR REUSEABLE PIPELINE RESOURCES)
      REPO_NAME_LIB: 'skysgh/resources.deployments.lib'
      # BRANCH INFO
      BRANCH: ${{ github.ref }}
      BRANCH_ID: '000'
      # ENVIRONMANT INFO: it's either BT, DT, ST, UT, IT, TR, PP, PR
      ENVIRONMENT_ID: ${{vars.ENVIRONMENT_ID}}  
      # DEFINE REPO CONSTANTS
      # AZURE CREDENTIALS INFO:
      AZURE_SUBSCRIPTION_ID: ${{ secrets.NP_AZURE_SUBSCRIPTION_ID }}
      ENTRA_APP_CLIENT_ID: ${{ secrets.NP_ENTRA_APP_CLIENT_ID }}
      ENTRA_APP_CLIENT_SECRET: ${{ secrets.NP_ENTRA_APP_CLIENT_SECRET }}
      AZURE_ENTRA_APP_CLIENT_CRED: | 
        ${{ secrets.NP_ENTRA_APP_CLIENT_CREDS }}
      NODE_VERSION: 20.11.0
      ACTIONS_STEP_DEBUG: 'true'
      ACTIONS_RUNNER_DEBUG: 'true'
      PROJECT_SUBDIR: 'SOURCE/App.Service.Client.Web/'
      # make it available to params file:
      AZURE_LOCATION_1_ID: ${{ vars.AZURE_LOCATION_1_ID }}
      AZURE_LOCATION_2_ID: ${{ vars.AZURE_LOCATION_2_ID }}
      AZURE_LOCATION_3_ID: ${{ vars.AZURE_LOCATION_3_ID }}
    steps:

      # print out Inor about source:
      - name: Show Environment Info
        run: echo ${{env.REPO_NAME_SRC}}


    #   Already done.
    #   # Checkout code from *this* repo
    #   # onto runner (not target SWA...)
    #   # without giving directory, so default:
    #   - name: Checkout Project Repo
    #     uses: actions/checkout@v2
    #     with:
    #       repository: ${{env.REPO_NAME_SRC}}
  

      
      - name: "Summarise Context Before Starting"
        run: |
          echo "Misc Checks"
          echo "======================"
          echo "Syntax a.............: '${PROJECT_SUBDIR}'"
          echo "Syntax b.............: '${{env.PROJECT_SUBDIR}}'"
          echo "Initiator"
          echo "======================"
          echo "Actor................: '${GITHUB_ACTOR}'"
          echo "Event................: '${GITHUB_EVENT_NAME}'"
          echo " "
          echo "Workspace Directories"
          echo "======================"
          echo "Home.................: '${HOME}'"
          echo "Workspace............: '${GITHUB_WORKSPACE}'"
          echo " "
          echo "Libraries"
          echo "======================"
          echo "Repo.Lib.............: '${{env.REPO_NAME_LIB}}'"
          echo " "
          echo "Repo Branch"
          echo "=================="
          echo "Repo.Site............: '${{env.REPO_SITE}}'"
          echo "Repo.Scr.............: '${{env.GITHUB_REPOSITORY}}'"
          echo "Branch.Name..........: '${{env.BRANCH}}'"
          echo "Branch.Ref...........: '${{github.GITHUB_REF}}'"
          echo "Branch.Number........: '${{env.BRANCH_ID}}'"
          echo "Token................: '${{secrets.GITHUB_TOKEN}}'"
          echo "PAT..................: '${{secrets.GH_BASE_CLIENT_THEMED}}'"
          echo " "
          echo "Env"
          echo "======================"
          echo "Env.Id...............: '${{env.ENVIRONMENT_ID}}'"
          echo " "
          echo "Azure"
          echo "======================"
          echo "Azure.SubscriptionId.: '${{ secrets.NP_AZURE_SUBSCRIPTION_ID }}'"
          echo "Azure.Location.1.....: '${{ env.AZURE_LOCATION_1_ID }}'"
          echo "Azure.Location.2.....: '${{ env.AZURE_LOCATION_2_ID }}'"
          echo "Azure.Location.3.....: '${{ env.AZURE_LOCATION_3_ID }}'"
          echo " "
          echo "Entra"
          echo "======================"
          echo "Entra.TenantId.......: '${{ secrets.NP_ENTRA_TENANT_ID }}'"
          echo "Entra.AppClientId....: '${{ secrets.NP_ENTRA_APP_CLIENT_ID }}'"
          echo "Entra.AppClientSecret: '${{ secrets.NP_ENTRA_APP_CLIENT_SECRET }}'"
          echo "Entra.AppClient Creds: '${{ secrets.NP_AZURE_ENTRA_APP_CLIENT_CREDS }}'"
          echo " "

#      # Checkout this repo:
#      # onto runner (not target SWA...)
#      - name: Checkout Repo
#        uses: actions/checkout@v4
      
      # Checkout code from *lib* repo
      # to a directory parallel to this repo's code
      - name: Checkout Library Repo
        uses: actions/checkout@v4
        with:
          repository: ${{env.REPO_NAME_LIB}}
          path: './DeploymentLib'



#      - name: Build And Deploy SWA using Action
#        id: builddeploy
#        uses: Azure/static-web-apps-deploy@v1
#        with:
#          
#          # ?          
#          action: "upload"
#          # 
#          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
#          # 
#          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_RED_WATER_0D3003200 }}
#
#          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
#          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
#          app_location: "/SOURCE/App.Service.Client.Web" # App source code path
#          api_location: "" # Api source code path - optional
#          # and where it gets built to:          
#          output_location: "dist/base" # Built app content directory - optional
#        env:
#          NODE_VERSION: 20.11.0
 #         ###### End of Repository/Build Configurations ######




#      NOTE: this has been moved out of yaml.
#      - name: Ensure Resource Group(s)
#        uses: azure/arm-deploy@v1
#        with:
#          scope: subscription
#          region: ${{ vars.AZURE_LOCATION_1_ID }}
#          subscriptionId: ${{ secrets.NP_AZURE_SUBSCRIPTION_ID }}
#          #resourceGroupName: ${{ env.RG_NAME }}
#          template: ".github/workflows/resource-group.bicep"
#          parameters: "resourceGroupName=${{ env.RG_NAME }} resourceGroupLocation=${{ vars.AZURE_LOCATION_1_ID }}"
#          failOnStdErr: false


      - name: NPM - Download library of actions/yaml/etc. that can be used to build artefacts
        run: |
          # Download libraries
          npm install --prefix ${PROJECT_SUBDIR}

 #     - name: NPM - Build the application (Note that we are still on runner, not target swa...)
 #       run: |
 #         # Build, Compile, Package:
 #         npm run --prefix ${PROJECT_SUBDIR} build

      #   Not as important as I thought at first as this is iterating 
      #   over Runner (and not target SWA...)
      # - name: View contents of compiled Dist folder
      #   shell: pwsh
      #   run: |
      #     Get-ChildItem -Path "${{env.PROJECT_SUBDIR}}/dist/*.*" -Recurse -Force


      # Login to Azure, in order to manipulate remote resources
      - name: Azure Login using Action
        uses: azure/login@v2
        with:
          creds: ${{ secrets.NP_AZURE_ENTRA_APP_CLIENT_CREDS}} 
          
# /home/runner/work/BASE.Jump.Dev.Client.Themed/BASE.Jump.Dev.Client.Themed/SOURCE/App.Service.Client.Web/dist/
      - name: Run main bicep file (creating RG & SWA)
        uses: azure/arm-deploy@v1
        with:
          scope: subscription
          region: ${{ vars.AZURE_LOCATION_1_ID }}
          subscriptionId: ${{ secrets.NP_AZURE_SUBSCRIPTION_ID }}
          #resourceGroupName: ${{ env.RG_NAME }}
          template: ".github/workflows/main.bicep"
          # parameters: "projectName=${{ env.PROJECT_NAME }} environmentId=BT resourceLocation=${{ vars.AZURE_LOCATION_1_ID }} repositoryUrl=https://github.com/skysgh/BASE.Jump.Dev.Client.Themed.git repositoryToken=${{secrets.GITHUB_TOKEN}} appBuildCommand='npm install && npm run build' appLocation=${{env.PROJECT_SUBDIR}} outputLocation=${{env.PROJECT_SUBDIR}}/dist/base   "
            # ".github/workflows/main.bicepparam" 


          parameters: >
            projectName="${{ env.PROJECT_NAME }}"
            environmentId="BT"
            resourceLocation="${{ vars.AZURE_LOCATION_1_ID }}"
            repositoryUrl="${{ env.REPO_SITE }}"
            repositoryToken="${{ secrets.GH_BASE_CLIENT_THEMED }}"
            appLocation="${{ env.PROJECT_SUBDIR }}"
            appBuildCommand="npm install && npm run build"
            outputLocation="dist/${{env.PROJECT_CODE_NAME}}"
          failOnStdErr: false
          


      - name: Static Web App - get API key for deployment and URL
        id: static_web_app_apikey
        uses: azure/CLI@v1
        with:
          inlineScript: |
            APIKEY=$(az staticwebapp secrets list --name '${{ env.PROJECT_NAME }}' | jq -r '.properties.apiKey')
            run: |
              echo "APIKEY=$APIKEY"
              echo "APIKEY=$APIKEY" >> $GITHUB_OUTPUT

              DEFAULTHOSTNAME=$(az staticwebapp show -n '${{ env.PROJECT_NAME }}' | jq -r '.defaultHostname')
              echo "DEFAULTHOSTNAME=$DEFAULTHOSTNAME" >> $GITHUB_OUTPUT
              echo $DEFAULTHOSTNAME

              PREVIEW_URL="https://${DEFAULTHOSTNAME/.[1-9]./-${{github.event.pull_request.number }}.${{ env.LOCATION }}.1.}"
              echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_OUTPUT
              echo $PREVIEW_URL


      - name: Static Web App - build and deploy
        id: static_web_app_build_and_deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.static_web_app_apikey.outputs.APIKEY }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: '${{env.PROJECT_SUBDIR }}' # App source code path
          # api_location: '' # Api source code path - optional
          output_location: 'dist/${{env.PROJECT_CODE_NAME}}' 

name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

env:
  RESOURCE_GROUP: rg-blog-johnnyreilly-com
  LOCATION: westeurope
  STATICWEBAPPNAME: blog.johnnyreilly.com
  TAGS: '{"owner":"johnnyreilly", "email":"johnny_reilly@hotmail.com"}'

jobs:
  build_and_deploy_swa_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and deploy
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Deployment Name
        id: deployment_name
        run: |
          REF_SHA='${{ github.ref }}.${{ github.sha }}'
          DEPLOYMENT_NAME="${REF_SHA////-}"
          echo "DEPLOYMENT_NAME=$DEPLOYMENT_NAME" >> $GITHUB_OUTPUT

      - name: Static Web App - change details
        id: static_web_app_what_if
        if: github.event_name == 'pull_request'
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az deployment group what-if \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --name "${{ steps.deployment_name.outputs.DEPLOYMENT_NAME }}" \
              --template-file ./infra/main.bicep \
              --parameters \
                  branch='main' \
                  location='${{ env.LOCATION }}' \
                  name='${{ env.STATICWEBAPPNAME }}' \
                  tags='${{ env.TAGS }}' \
                  repositoryToken='${{ secrets.WORKFLOW_TOKEN }}' \
                  customDomainName='${{ env.STATICWEBAPPNAME }}'

      - name: Static Web App - deploy infra
        id: static_web_app_deploy
        if: github.event_name != 'pull_request'
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az deployment group create \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --name "${{ steps.deployment_name.outputs.DEPLOYMENT_NAME }}" \
              --template-file ./infra/main.bicep \
              --parameters \
                  branch='main' \
                  location='${{ env.LOCATION }}' \
                  name='${{ env.STATICWEBAPPNAME }}' \
                  tags='${{ env.TAGS }}' \
                  repositoryToken='${{ secrets.WORKFLOW_TOKEN }}' \
                  customDomainName='${{ env.STATICWEBAPPNAME }}'

      - name: Static Web App - get API key for deployment
        id: static_web_app_apikey
        uses: azure/CLI@v1
        with:
          inlineScript: |
            APIKEY=$(az staticwebapp secrets list --name '${{ env.STATICWEBAPPNAME }}' | jq -r '.properties.apiKey')
            echo "APIKEY=$APIKEY" >> $GITHUB_OUTPUT

      - name: Static Web App - build and deploy
        id: static_web_app_build_and_deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.static_web_app_apikey.outputs.APIKEY }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: '/blog-website' # App source code path
          api_location: '' # Api source code path - optional
          output_location: 'build' # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

      - name: Static Web App - get preview URL
        id: static_web_app_preview_url
        uses: azure/CLI@v1
        with:
          inlineScript: |
            DEFAULTHOSTNAME=$(az staticwebapp show -n '${{ env.STATICWEBAPPNAME }}' | jq -r '.defaultHostname')
            echo $DEFAULTHOSTNAME

            PREVIEW_URL="https://${DEFAULTHOSTNAME/.[1-9]./-${{github.event.pull_request.number }}.${{ env.LOCATION }}.1.}"
            echo $PREVIEW_URL

            echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_OUTPUT
        outputs:
          preview-url: ${{steps.static_web_app_preview_url.outputs.PREVIEW_URL}}
