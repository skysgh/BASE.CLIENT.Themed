name: Deploy to Environment

# Triggers, on specific branches
on:
  push:
    branches:
      - main
      - release
      - develop


# Running on one runner:      
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: NP
    env:
      # PROJECT NAME which is basis of resource names.
      PROJECT_NAME: 'BASALT'
      # REPO #1 (SRC) INFO
      REPO_NAME_SRC: $GITHUB_REPOSITORY
      # REPO #2 (LIB) INFO (FOR REUSEABLE PIPELINE RESOURCES)
      REPO_NAME_LIB: 'skysgh/resources.deployments.lib'
      # BRANCH INFO
      BRANCH: ${{ github.ref }}
      BRANCH_ID: '000'
      # ENVIRONMANT INFO: it's either BT, DT, ST, UT, IT, TR, PP, PR
      ENVIRONMENT_ID: ${{vars.ENVIRONMENT_ID}}  
      # DEFINE REPO CONSTANTS
      # AZURE CREDENTIALS INFO:
      AZURE_SUBSCRIPTION_ID: ${{ secrets.NP_AZURE_SUBSCRIPTION_ID }}
      ENTRA_APP_CLIENT_ID: ${{ secrets.NP_ENTRA_APP_CLIENT_ID }}
      ENTRA_APP_CLIENT_SECRET: ${{ secrets.NP_ENTRA_APP_CLIENT_SECRET }}
      AZURE_ENTRA_APP_CLIENT_CRED: | 
        ${{ secrets.NP_ENTRA_APP_CLIENT_CREDS }}
      NODE_VERSION: 20.11.0

    steps:
      # Checkout code from *lib* repo
      # to a directory parallel to this repo's code
      - name: Show Environment Info
        run: echo ${{env.REPO_NAME_SRC}}


    #   Already done.
    #   # Checkout code from *this* repo
    #   # without giving directory, so default:
    #   - name: Checkout Project Repo
    #     uses: actions/checkout@v2
    #     with:
    #       repository: ${{env.REPO_NAME_SRC}}
  

      # Checkout code from *lib* repo
      # to a directory parallel to this repo's code
      
      - name: "Summarise Context Before Starting"
        run: |
          echo "Initiator"
          echo "======================"
          echo "Actor................: '${GITHUB_ACTOR}'"
          echo "Event................: '${GITHUB_EVENT_NAME}'"
          echo " "
          echo "Workspace Directories"
          echo "======================"
          echo "Home.................: '${HOME}'"
          echo "Workspace............: '${GITHUB_WORKSPACE}'"
          echo " "
          echo "Libraries"
          echo "======================"
          echo "Repo.Lib.............: '${{env.REPO_NAME_LIB}}'"
          echo " "
          echo "Repo Branch"
          echo "=================="
          echo "Repo.Scr.............: '${{env.GITHUB_REPOSITORY}}'"
          echo "Branch.Name..........: '${{env.BRANCH}}'"
          echo "Branch.Ref...........: '${{github.GITHUB_REF}}'"
          echo "Branch.Number........: '${{env.BRANCH_ID}}'"
          echo "Token................: '${{secrets.GITHUB_TOKEN}}'"
          echo " "
          echo "Env"
          echo "======================"
          echo "Env.Id...............: '${{env.ENVIRONMENT_ID}}'"
          echo " "
          echo "Azure"
          echo "======================"
          echo "Azure.SubscriptionId.: '${{ secrets.NP_AZURE_SUBSCRIPTION_ID }}'"
          echo "Azure.Location.1.....: '${{ vars.AZURE_LOCATION_1_ID }}'"
          echo "Azure.Location.2.....: '${{ vars.AZURE_LOCATION_2_ID }}'"
          echo "Azure.Location.3.....: '${{ vars.AZURE_LOCATION_3_ID }}'"
          echo " "
          echo "Entra"
          echo "======================"
          echo "Entra.TenantId.......: '${{ secrets.NP_ENTRA_TENANT_ID }}'"
          echo "Entra.AppClientId....: '${{ secrets.NP_ENTRA_APP_CLIENT_ID }}'"
          echo "Entra.AppClientSecret: '${{ secrets.NP_ENTRA_APP_CLIENT_SECRET }}'"
          echo "Entra.AppClient Creds: '${{ secrets.NP_AZURE_ENTRA_APP_CLIENT_CREDS }}'"
          echo " "


      # Cheout this lib:
      - name: Checkout Repo
        uses: actions/checkout@v4
      
      # Checkout code from *lib* repo
      # to a directory parallel to this repo's code
      - name: Checkout Library Repo
        uses: actions/checkout@v4
        with:
          repository: ${{env.REPO_NAME_LIB}}
          path: './DeploymentLib'
          
      # Login to Azure:
      - name: Azure Login using Action
        uses: azure/login@v2
        with:
          creds: ${{ secrets.NP_AZURE_ENTRA_APP_CLIENT_CREDS}} 
 
#      - name: Ensure Resource Group(s)
#        uses: azure/arm-deploy@v1
#        with:
#          scope: subscription
#          region: ${{ vars.AZURE_LOCATION_1_ID }}
#          subscriptionId: ${{ secrets.NP_AZURE_SUBSCRIPTION_ID }}
#          #resourceGroupName: ${{ env.RG_NAME }}
#          template: ".github/workflows/resource-group.bicep"
#          parameters: "resourceGroupName=${{ env.RG_NAME }} resourceGroupLocation=${{ vars.AZURE_LOCATION_1_ID }}"
#          failOnStdErr: false


      - name: Run Flow
        uses: azure/arm-deploy@v1
        with:
          scope: subscription
          region: ${{ vars.AZURE_LOCATION_1_ID }}
          subscriptionId: ${{ secrets.NP_AZURE_SUBSCRIPTION_ID }}
          #resourceGroupName: ${{ env.RG_NAME }}
          template: ".github/workflows/main.bicep"
          parameters: "projectName=${{ env.PROJECT_NAME }} environmentId=BT resourceLocation=${{ vars.AZURE_LOCATION_1_ID }} repositoryToken=${{secrets.GITHUB_TOKEN}}"
          failOnStdErr: false

      - name: Ensure Static WebSite Resource
        run: |
          # Your deployment commands here

      - name: Compile source code
        run: |

      - name: Take offline
        run: |

      - name: Deploy source code
        run: |

      - name: Wake
        run: |

      - name: Bring back online
        run: |
