{"version":3,"file":"jsonforms-core.cjs.js","sources":["../src/generators/schema.ts","../src/models/draft4.ts","../src/models/uischema.ts","../src/util/array.ts","../src/reducers/cells.ts","../src/configDefault.ts","../src/reducers/config.ts","../src/reducers/core.ts","../src/reducers/default-data.ts","../src/i18n/i18nUtil.ts","../src/i18n/arrayTranslations.ts","../src/i18n/combinatorTranslations.ts","../src/reducers/i18n.ts","../src/reducers/renderers.ts","../src/testers/testers.ts","../src/reducers/uischemas.ts","../src/reducers/reducers.ts","../src/reducers/selectors.ts","../src/reducers/middleware.ts","../src/util/path.ts","../src/util/resolvers.ts","../src/util/runtime.ts","../src/util/util.ts","../src/util/label.ts","../src/util/renderer.ts","../src/util/cell.ts","../src/util/combinators.ts","../src/util/ids.ts","../src/util/schema.ts","../src/util/uischema.ts","../src/util/validator.ts","../src/util/defaultDateFormat.ts","../src/generators/uischema.ts","../src/generators/Generate.ts","../src/actions/actions.ts","../src/Helpers.ts"],"sourcesContent":["/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport type { JsonSchema4 } from '../models';\n\nconst ADDITIONAL_PROPERTIES = 'additionalProperties';\nconst REQUIRED_PROPERTIES = 'required';\n\ntype Properties = { [property: string]: JsonSchema4 };\n\nconst distinct = (\n  properties: any[],\n  discriminator: (item: any) => string\n): JsonSchema4[] => {\n  const known: { [property: string]: boolean } = {};\n\n  return properties.filter((item) => {\n    const discriminatorValue = discriminator(item);\n    if (Object.prototype.hasOwnProperty.call(known, discriminatorValue)) {\n      return false;\n    } else {\n      known[discriminatorValue] = true;\n      return true;\n    }\n  });\n};\n\nclass Gen {\n  constructor(\n    private findOption: (props: Properties) => (optionName: string) => any\n  ) {}\n\n  // TODO fix @typescript-eslint/ban-types\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  schemaObject = (data: Object): JsonSchema4 => {\n    const props: Properties = this.properties(data);\n    const schema: JsonSchema4 = {\n      type: 'object',\n      properties: props,\n      additionalProperties: this.findOption(props)(ADDITIONAL_PROPERTIES),\n    };\n    const required = this.findOption(props)(REQUIRED_PROPERTIES);\n    if (required.length > 0) {\n      schema.required = required;\n    }\n\n    return schema;\n  };\n\n  properties = (data: any): Properties => {\n    const emptyProps: Properties = {};\n\n    return Object.keys(data).reduce((acc: Properties, propName: string) => {\n      acc[propName] = this.property(data[propName]);\n\n      return acc;\n    }, emptyProps);\n  };\n\n  property = (data: any): JsonSchema4 => {\n    switch (typeof data) {\n      case 'string':\n        return { type: 'string' };\n      case 'boolean':\n        return { type: 'boolean' };\n      case 'number':\n        if (Number.isInteger(data)) {\n          return { type: 'integer' };\n        }\n\n        return { type: 'number' };\n      case 'object':\n        if (data == null) {\n          return { type: 'null' };\n        }\n\n        return this.schemaObjectOrArray(data);\n      default:\n        return {};\n    }\n  };\n\n  schemaObjectOrArray = (data: any): JsonSchema4 => {\n    if (data instanceof Array) {\n      return this.schemaArray(data as any[]);\n    } else {\n      return this.schemaObject(data);\n    }\n  };\n\n  schemaArray = (data: any[]): JsonSchema4 => {\n    if (data.length > 0) {\n      const allProperties: JsonSchema4[] = data.map(this.property);\n      const uniqueProperties = distinct(allProperties, (prop) =>\n        JSON.stringify(prop)\n      );\n      if (uniqueProperties.length === 1) {\n        return {\n          type: 'array',\n          items: uniqueProperties[0],\n        };\n      } else {\n        return {\n          type: 'array',\n          items: {\n            oneOf: uniqueProperties,\n          },\n        };\n      }\n    } else {\n      return {\n        type: 'array',\n        items: {},\n      };\n    }\n  };\n}\n\n/**\n * Generate a JSON schema based on the given data and any additional options.\n * @param {Object} instance the data to create a JSON schema for\n * @param {any} options any additional options that may alter the generated JSON schema\n * @returns {JsonSchema} the generated schema\n */\nexport const generateJsonSchema = (\n  // TODO fix @typescript-eslint/ban-types\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  instance: Object,\n  options: any = {}\n): JsonSchema4 => {\n  const findOption =\n    (props: Properties) =>\n    (optionName: string): boolean | string[] => {\n      switch (optionName) {\n        case ADDITIONAL_PROPERTIES:\n          if (\n            Object.prototype.hasOwnProperty.call(options, ADDITIONAL_PROPERTIES)\n          ) {\n            return options[ADDITIONAL_PROPERTIES];\n          }\n\n          return true;\n        case REQUIRED_PROPERTIES:\n          if (\n            Object.prototype.hasOwnProperty.call(options, REQUIRED_PROPERTIES)\n          ) {\n            return options[REQUIRED_PROPERTIES](props);\n          }\n\n          return Object.keys(props);\n        default:\n          return;\n      }\n    };\n\n  const gen = new Gen(findOption);\n\n  return gen.schemaObject(instance);\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nexport const Draft4 = {\n  id: 'http://json-schema.org/draft-04/schema#',\n  $schema: 'http://json-schema.org/draft-04/schema#',\n  description: 'Core schema meta-schema',\n  definitions: {\n    schemaArray: {\n      type: 'array',\n      minItems: 1,\n      items: { $ref: '#' },\n    },\n    positiveInteger: {\n      type: 'integer',\n      minimum: 0,\n    },\n    positiveIntegerDefault0: {\n      allOf: [{ $ref: '#/definitions/positiveInteger' }, { default: 0 }],\n    },\n    simpleTypes: {\n      enum: [\n        'array',\n        'boolean',\n        'integer',\n        'null',\n        'number',\n        'object',\n        'string',\n      ],\n    },\n    stringArray: {\n      type: 'array',\n      items: { type: 'string' },\n      minItems: 1,\n      uniqueItems: true,\n    },\n  },\n  type: 'object',\n  properties: {\n    id: {\n      type: 'string',\n      format: 'uri',\n    },\n    $schema: {\n      type: 'string',\n      format: 'uri',\n    },\n    title: {\n      type: 'string',\n    },\n    description: {\n      type: 'string',\n    },\n    default: {},\n    multipleOf: {\n      type: 'number',\n      minimum: 0,\n      exclusiveMinimum: true,\n    },\n    maximum: {\n      type: 'number',\n    },\n    exclusiveMaximum: {\n      type: 'boolean',\n      default: false,\n    },\n    minimum: {\n      type: 'number',\n    },\n    exclusiveMinimum: {\n      type: 'boolean',\n      default: false,\n    },\n    maxLength: { $ref: '#/definitions/positiveInteger' },\n    minLength: { $ref: '#/definitions/positiveIntegerDefault0' },\n    pattern: {\n      type: 'string',\n      format: 'regex',\n    },\n    additionalItems: {\n      anyOf: [{ type: 'boolean' }, { $ref: '#' }],\n      default: {},\n    },\n    items: {\n      anyOf: [{ $ref: '#' }, { $ref: '#/definitions/schemaArray' }],\n      default: {},\n    },\n    maxItems: { $ref: '#/definitions/positiveInteger' },\n    minItems: { $ref: '#/definitions/positiveIntegerDefault0' },\n    uniqueItems: {\n      type: 'boolean',\n      default: false,\n    },\n    maxProperties: { $ref: '#/definitions/positiveInteger' },\n    minProperties: { $ref: '#/definitions/positiveIntegerDefault0' },\n    required: { $ref: '#/definitions/stringArray' },\n    additionalProperties: {\n      anyOf: [{ type: 'boolean' }, { $ref: '#' }],\n      default: {},\n    },\n    definitions: {\n      type: 'object',\n      additionalProperties: { $ref: '#' },\n      default: {},\n    },\n    properties: {\n      type: 'object',\n      additionalProperties: { $ref: '#' },\n      default: {},\n    },\n    patternProperties: {\n      type: 'object',\n      additionalProperties: { $ref: '#' },\n      default: {},\n    },\n    dependencies: {\n      type: 'object',\n      additionalProperties: {\n        anyOf: [{ $ref: '#' }, { $ref: '#/definitions/stringArray' }],\n      },\n    },\n    enum: {\n      type: 'array',\n      minItems: 1,\n      uniqueItems: true,\n    },\n    type: {\n      anyOf: [\n        { $ref: '#/definitions/simpleTypes' },\n        {\n          type: 'array',\n          items: { $ref: '#/definitions/simpleTypes' },\n          minItems: 1,\n          uniqueItems: true,\n        },\n      ],\n    },\n    allOf: { $ref: '#/definitions/schemaArray' },\n    anyOf: { $ref: '#/definitions/schemaArray' },\n    oneOf: { $ref: '#/definitions/schemaArray' },\n    not: { $ref: '#' },\n  },\n  dependencies: {\n    exclusiveMaximum: ['maximum'],\n    exclusiveMinimum: ['minimum'],\n  },\n  default: {},\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport type { JsonSchema } from './jsonSchema';\n\n/**\n * Interface for describing an UI schema element that is referencing\n * a subschema. The value of the scope may be a JSON Pointer.\n */\nexport interface Scopable {\n  /**\n   * The scope that determines to which part this element should be bound to.\n   */\n  scope?: string;\n}\n\n/**\n * Interface for describing an UI schema element that is referencing\n * a subschema. The value of the scope must be a JSON Pointer.\n */\nexport interface Scoped extends Scopable {\n  /**\n   * The scope that determines to which part this element should be bound to.\n   */\n  scope: string;\n}\n\n/**\n * Interface for describing an UI schema element that may be labeled.\n */\nexport interface Labelable<T = string> {\n  /**\n   * Label for UI schema element.\n   */\n  label?: string | T;\n}\n\n/**\n * Interface for describing an UI schema element that is labeled.\n */\nexport interface Labeled<T = string> extends Labelable<T> {\n  label: string | T;\n}\n\n/*\n * Interface for describing an UI schema element that can provide an internationalization base key.\n * If defined, this key is suffixed to derive applicable message keys for the UI schema element.\n * For example, such suffixes are `.label` or `.description` to derive the corresponding message keys for a control element.\n */\nexport interface Internationalizable {\n  i18n?: string;\n}\n\n/**\n * A rule that may be attached to any UI schema element.\n */\nexport interface Rule {\n  /**\n   * The effect of the rule\n   */\n  effect: RuleEffect;\n\n  /**\n   * The condition of the rule that must evaluate to true in order\n   * to trigger the effect.\n   */\n  condition: Condition;\n}\n\n/**\n * The different rule effects.\n */\nexport enum RuleEffect {\n  /**\n   * Effect that hides the associated element.\n   */\n  HIDE = 'HIDE',\n  /**\n   * Effect that shows the associated element.\n   */\n  SHOW = 'SHOW',\n  /**\n   * Effect that enables the associated element.\n   */\n  ENABLE = 'ENABLE',\n  /**\n   * Effect that disables the associated element.\n   */\n  DISABLE = 'DISABLE',\n}\n\n/**\n * Represents a condition to be evaluated.\n */\nexport interface Condition {\n  /**\n   * The type of condition.\n   */\n  readonly type?: string;\n}\n\n/**\n * A leaf condition.\n */\nexport interface LeafCondition extends Condition, Scoped {\n  type: 'LEAF';\n\n  /**\n   * The expected value when evaluating the condition\n   */\n  expectedValue: any;\n}\n\nexport interface SchemaBasedCondition extends Condition, Scoped {\n  schema: JsonSchema;\n\n  /**\n   * When the scope resolves to undefined and `failWhenUndefined` is set to `true`, the condition\n   * will fail. Therefore the reverse effect will be applied.\n   *\n   * Background:\n   * Most JSON Schemas will successfully validate against `undefined` data. Specifying that a\n   * condition shall fail when data is `undefined` requires to lift the scope to being able to use\n   * JSON Schema's `required`.\n   *\n   * Using `failWhenUndefined` allows to more conveniently express this condition.\n   */\n  failWhenUndefined?: boolean;\n}\n\n/**\n * A composable condition.\n */\nexport interface ComposableCondition extends Condition {\n  conditions: Condition[];\n}\n\n/**\n * An or condition.\n */\nexport interface OrCondition extends ComposableCondition {\n  type: 'OR';\n}\n\n/**\n * An and condition.\n */\nexport interface AndCondition extends ComposableCondition {\n  type: 'AND';\n}\n\n/**\n * Common base interface for any UI schema element.\n */\nexport interface UISchemaElement {\n  /**\n   * The type of this UI schema element.\n   */\n  type: string;\n\n  /**\n   * An optional rule.\n   */\n  rule?: Rule;\n\n  /**\n   * Any additional options.\n   */\n  options?: { [key: string]: any };\n}\n\n/**\n * Represents a layout element which can order its children\n * in a specific way.\n */\nexport interface Layout extends UISchemaElement {\n  /**\n   * The child elements of this layout.\n   */\n  elements: UISchemaElement[];\n}\n\n/**\n * A layout which orders its child elements vertically (i.e. from top to bottom).\n */\nexport interface VerticalLayout extends Layout {\n  type: 'VerticalLayout';\n}\n\n/**\n * A layout which orders its children horizontally (i.e. from left to right).\n */\nexport interface HorizontalLayout extends Layout {\n  type: 'HorizontalLayout';\n}\n\n/**\n * A group resembles a vertical layout, but additionally might have a label.\n * This layout is useful when grouping different elements by a certain criteria.\n */\nexport interface GroupLayout extends Layout, Labelable, Internationalizable {\n  type: 'Group';\n}\n\n/**\n * Represents an object that can be used to configure a label.\n */\nexport interface LabelDescription {\n  /**\n   * An optional text to be displayed.\n   */\n  text?: string;\n  /**\n   * Optional property that determines whether to show this label.\n   */\n  show?: boolean;\n}\n\n/**\n * A label element.\n */\nexport interface LabelElement extends UISchemaElement, Internationalizable {\n  type: 'Label';\n  /**\n   * The text of label.\n   */\n  text: string;\n}\n\n/**\n * A control element. The scope property of the control determines\n * to which part of the schema the control should be bound.\n */\nexport interface ControlElement\n  extends UISchemaElement,\n    Scoped,\n    Labelable<string | boolean | LabelDescription>,\n    Internationalizable {\n  type: 'Control';\n}\n\n/**\n * The category layout.\n */\nexport interface Category extends Layout, Labeled, Internationalizable {\n  type: 'Category';\n}\n\n/**\n * The categorization element, which may have children elements.\n * A child element may either be itself a Categorization or a Category, hence\n * the categorization element can be used to represent recursive structures like trees.\n */\nexport interface Categorization\n  extends UISchemaElement,\n    Labeled,\n    Internationalizable {\n  type: 'Categorization';\n  /**\n   * The child elements of this categorization which are either of type\n   * {@link Category} or {@link Categorization}.\n   */\n  elements: (Category | Categorization)[];\n}\n\nexport const isInternationalized = (\n  element: unknown\n): element is Required<Internationalizable> =>\n  typeof element === 'object' &&\n  element !== null &&\n  typeof (element as Internationalizable).i18n === 'string';\n\nexport const isGroup = (layout: Layout): layout is GroupLayout =>\n  layout.type === 'Group';\n\nexport const isLayout = (uischema: UISchemaElement): uischema is Layout =>\n  (uischema as Layout).elements !== undefined;\n\nexport const isScopable = (obj: unknown): obj is Scopable =>\n  !!obj && typeof obj === 'object';\n\nexport const isScoped = (obj: unknown): obj is Scoped =>\n  isScopable(obj) && typeof obj.scope === 'string';\n\nexport const isLabelable = (obj: unknown): obj is Labelable =>\n  !!obj && typeof obj === 'object';\n\nexport const isLabeled = <T = never>(obj: unknown): obj is Labeled<T> =>\n  isLabelable(obj) && ['string', 'boolean'].includes(typeof obj.label);\n","/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nconst move = (array: any[], index: number, delta: number) => {\n  const newIndex: number = index + delta;\n  if (newIndex < 0 || newIndex >= array.length) {\n    return;\n  } // Already at the top or bottom.\n  const indexes: number[] = [index, newIndex].sort((a, b) => a - b); // Sort the indixes\n  array.splice(indexes[0], 2, array[indexes[1]], array[indexes[0]]);\n};\n\nconst moveUp = (array: any[], toMove: number) => {\n  move(array, toMove, -1);\n};\n\nconst moveDown = (array: any[], toMove: number) => {\n  move(array, toMove, 1);\n};\n\nexport { moveUp, moveDown };\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport type { RankedTester } from '../testers';\nimport {\n  ADD_CELL,\n  AddCellRendererAction,\n  REMOVE_CELL,\n  RemoveCellRendererAction,\n} from '../actions';\nimport type { Reducer } from '../util';\n\ntype ValidCellReducerActions = AddCellRendererAction | RemoveCellRendererAction;\n\nexport type JsonFormsCellRendererRegistryState =\n  JsonFormsCellRendererRegistryEntry[];\n\nexport interface JsonFormsCellRendererRegistryEntry {\n  tester: RankedTester;\n  cell: any;\n}\n\nexport const cellReducer: Reducer<\n  JsonFormsCellRendererRegistryState,\n  ValidCellReducerActions\n> = (state = [], { type, tester, cell }) => {\n  switch (type) {\n    case ADD_CELL:\n      return state.concat([{ tester, cell }]);\n    case REMOVE_CELL:\n      return state.filter((t) => t.tester !== tester);\n    default:\n      return state;\n  }\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nexport const configDefault = {\n  /*\n   * [text] whether to restrict the number of characters to maxLength,\n   * if specified in the JSON schema\n   */\n  restrict: false,\n\n  /*\n   * [text] whether to resize the input's width to maxLength,\n   * if specified in the JSON schema\n   */\n  trim: false,\n\n  /*\n   * [text] if input descriptions should hide when not focused\n   */\n  showUnfocusedDescription: false,\n\n  /*\n   * [text] if asterisks in labels for required fields should be hidden\n   */\n  hideRequiredAsterisk: false,\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport merge from 'lodash/merge';\nimport { SET_CONFIG, SetConfigAction } from '../actions';\nimport { configDefault } from '../configDefault';\nimport type { Reducer } from '../util';\n\nconst applyDefaultConfiguration = (config: any = {}) =>\n  merge({}, configDefault, config);\n\nexport const configReducer: Reducer<any, SetConfigAction> = (\n  state = applyDefaultConfiguration(),\n  action\n) => {\n  switch (action.type) {\n    case SET_CONFIG:\n      return applyDefaultConfiguration(action.config);\n    default:\n      return state;\n  }\n};\n","/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport cloneDeep from 'lodash/cloneDeep';\nimport setFp from 'lodash/fp/set';\nimport unsetFp from 'lodash/fp/unset';\nimport get from 'lodash/get';\nimport filter from 'lodash/filter';\nimport isEqual from 'lodash/isEqual';\nimport isFunction from 'lodash/isFunction';\nimport type Ajv from 'ajv';\nimport type { ErrorObject, ValidateFunction } from 'ajv';\nimport {\n  CoreActions,\n  INIT,\n  InitAction,\n  InitActionOptions,\n  SET_AJV,\n  SET_SCHEMA,\n  SET_UISCHEMA,\n  SET_VALIDATION_MODE,\n  UPDATE_DATA,\n  UPDATE_ERRORS,\n  UPDATE_CORE,\n  UpdateCoreAction,\n} from '../actions';\nimport { createAjv, decode, isOneOfEnumSchema, Reducer } from '../util';\nimport type { JsonSchema, UISchemaElement } from '../models';\n\nexport const validate = (\n  validator: ValidateFunction | undefined,\n  data: any\n): ErrorObject[] => {\n  if (validator === undefined) {\n    return [];\n  }\n  const valid = validator(data);\n  if (valid) {\n    return [];\n  }\n  return validator.errors;\n};\n\nexport type ValidationMode =\n  | 'ValidateAndShow'\n  | 'ValidateAndHide'\n  | 'NoValidation';\n\nexport interface JsonFormsCore {\n  data: any;\n  schema: JsonSchema;\n  uischema: UISchemaElement;\n  errors?: ErrorObject[];\n  additionalErrors?: ErrorObject[];\n  validator?: ValidateFunction;\n  ajv?: Ajv;\n  validationMode?: ValidationMode;\n}\n\nconst initState: JsonFormsCore = {\n  data: {},\n  schema: {},\n  uischema: undefined,\n  errors: [],\n  validator: undefined,\n  ajv: undefined,\n  validationMode: 'ValidateAndShow',\n  additionalErrors: [],\n};\n\nconst getOrCreateAjv = (\n  state: JsonFormsCore,\n  action?: InitAction | UpdateCoreAction\n): Ajv => {\n  if (action) {\n    if (hasAjvOption(action.options)) {\n      // options object with ajv\n      return action.options.ajv;\n    } else if (action.options !== undefined) {\n      // it is not an option object => should be ajv itself => check for compile function\n      if (isFunction(action.options.compile)) {\n        return action.options;\n      }\n    }\n  }\n  return state.ajv ? state.ajv : createAjv();\n};\n\nconst hasAjvOption = (option: any): option is InitActionOptions => {\n  if (option) {\n    return option.ajv !== undefined;\n  }\n  return false;\n};\n\nconst getValidationMode = (\n  state: JsonFormsCore,\n  action?: InitAction | UpdateCoreAction\n): ValidationMode => {\n  if (action && hasValidationModeOption(action.options)) {\n    return action.options.validationMode;\n  }\n  return state.validationMode;\n};\n\nconst hasValidationModeOption = (option: any): option is InitActionOptions => {\n  if (option) {\n    return option.validationMode !== undefined;\n  }\n  return false;\n};\n\nconst hasAdditionalErrorsOption = (\n  option: any\n): option is InitActionOptions => {\n  if (option) {\n    return option.additionalErrors !== undefined;\n  }\n  return false;\n};\n\nconst getAdditionalErrors = (\n  state: JsonFormsCore,\n  action?: InitAction | UpdateCoreAction\n): ErrorObject[] => {\n  if (action && hasAdditionalErrorsOption(action.options)) {\n    return action.options.additionalErrors;\n  }\n  return state.additionalErrors;\n};\n\nexport const coreReducer: Reducer<JsonFormsCore, CoreActions> = (\n  state = initState,\n  action\n) => {\n  switch (action.type) {\n    case INIT: {\n      const thisAjv = getOrCreateAjv(state, action);\n\n      const validationMode = getValidationMode(state, action);\n      const v =\n        validationMode === 'NoValidation'\n          ? undefined\n          : thisAjv.compile(action.schema);\n      const e = validate(v, action.data);\n      const additionalErrors = getAdditionalErrors(state, action);\n\n      return {\n        ...state,\n        data: action.data,\n        schema: action.schema,\n        uischema: action.uischema,\n        additionalErrors,\n        errors: e,\n        validator: v,\n        ajv: thisAjv,\n        validationMode,\n      };\n    }\n    case UPDATE_CORE: {\n      const thisAjv = getOrCreateAjv(state, action);\n      const validationMode = getValidationMode(state, action);\n      let validator = state.validator;\n      let errors = state.errors;\n      if (\n        state.schema !== action.schema ||\n        state.validationMode !== validationMode ||\n        state.ajv !== thisAjv\n      ) {\n        // revalidate only if necessary\n        validator =\n          validationMode === 'NoValidation'\n            ? undefined\n            : thisAjv.compile(action.schema);\n        errors = validate(validator, action.data);\n      } else if (state.data !== action.data) {\n        errors = validate(validator, action.data);\n      }\n      const additionalErrors = getAdditionalErrors(state, action);\n\n      const stateChanged =\n        state.data !== action.data ||\n        state.schema !== action.schema ||\n        state.uischema !== action.uischema ||\n        state.ajv !== thisAjv ||\n        state.errors !== errors ||\n        state.validator !== validator ||\n        state.validationMode !== validationMode ||\n        state.additionalErrors !== additionalErrors;\n      return stateChanged\n        ? {\n            ...state,\n            data: action.data,\n            schema: action.schema,\n            uischema: action.uischema,\n            ajv: thisAjv,\n            errors: isEqual(errors, state.errors) ? state.errors : errors,\n            validator: validator,\n            validationMode: validationMode,\n            additionalErrors,\n          }\n        : state;\n    }\n    case SET_AJV: {\n      const currentAjv = action.ajv;\n      const validator =\n        state.validationMode === 'NoValidation'\n          ? undefined\n          : currentAjv.compile(state.schema);\n      const errors = validate(validator, state.data);\n      return {\n        ...state,\n        validator,\n        errors,\n      };\n    }\n    case SET_SCHEMA: {\n      const needsNewValidator =\n        action.schema && state.ajv && state.validationMode !== 'NoValidation';\n      const v = needsNewValidator\n        ? state.ajv.compile(action.schema)\n        : state.validator;\n      const errors = validate(v, state.data);\n      return {\n        ...state,\n        validator: v,\n        schema: action.schema,\n        errors,\n      };\n    }\n    case SET_UISCHEMA: {\n      return {\n        ...state,\n        uischema: action.uischema,\n      };\n    }\n    case UPDATE_DATA: {\n      if (action.path === undefined || action.path === null) {\n        return state;\n      } else if (action.path === '') {\n        // empty path is ok\n        const result = action.updater(cloneDeep(state.data));\n        const errors = validate(state.validator, result);\n        return {\n          ...state,\n          data: result,\n          errors,\n        };\n      } else {\n        const oldData: any = get(state.data, action.path);\n        const newData = action.updater(cloneDeep(oldData));\n        let newState: any;\n        if (newData !== undefined) {\n          newState = setFp(\n            action.path,\n            newData,\n            state.data === undefined ? {} : state.data\n          );\n        } else {\n          newState = unsetFp(\n            action.path,\n            state.data === undefined ? {} : state.data\n          );\n        }\n        const errors = validate(state.validator, newState);\n        return {\n          ...state,\n          data: newState,\n          errors,\n        };\n      }\n    }\n    case UPDATE_ERRORS: {\n      return {\n        ...state,\n        errors: action.errors,\n      };\n    }\n    case SET_VALIDATION_MODE: {\n      if (state.validationMode === action.validationMode) {\n        return state;\n      }\n      if (action.validationMode === 'NoValidation') {\n        const errors = validate(undefined, state.data);\n        return {\n          ...state,\n          errors,\n          validationMode: action.validationMode,\n        };\n      }\n      if (state.validationMode === 'NoValidation') {\n        const validator = state.ajv.compile(state.schema);\n        const errors = validate(validator, state.data);\n        return {\n          ...state,\n          validator,\n          errors,\n          validationMode: action.validationMode,\n        };\n      }\n      return {\n        ...state,\n        validationMode: action.validationMode,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const extractData = (state: JsonFormsCore) => get(state, 'data');\nexport const extractSchema = (state: JsonFormsCore) => get(state, 'schema');\nexport const extractUiSchema = (state: JsonFormsCore) => get(state, 'uischema');\nexport const extractAjv = (state: JsonFormsCore) => get(state, 'ajv');\n\nconst getInvalidProperty = (error: ErrorObject): string | undefined => {\n  switch (error.keyword) {\n    case 'required':\n    case 'dependencies':\n      return error.params.missingProperty;\n    case 'additionalProperties':\n      return error.params.additionalProperty;\n    default:\n      return undefined;\n  }\n};\n\nexport const getControlPath = (error: ErrorObject) => {\n  // Up until AJV v7 the path property was called 'dataPath'\n  // With AJV v8 the property was renamed to 'instancePath'\n  let controlPath = (error as any).dataPath || error.instancePath || '';\n\n  // change '/' chars to '.'\n  controlPath = controlPath.replace(/\\//g, '.');\n\n  const invalidProperty = getInvalidProperty(error);\n  if (invalidProperty !== undefined && !controlPath.endsWith(invalidProperty)) {\n    controlPath = `${controlPath}.${invalidProperty}`;\n  }\n\n  // remove '.' chars at the beginning of paths\n  controlPath = controlPath.replace(/^./, '');\n\n  // decode JSON Pointer escape sequences\n  controlPath = decode(controlPath);\n  return controlPath;\n};\n\nexport const errorsAt =\n  (\n    instancePath: string,\n    schema: JsonSchema,\n    matchPath: (path: string) => boolean\n  ) =>\n  (errors: ErrorObject[]): ErrorObject[] => {\n    // Get data paths of oneOf and anyOf errors to later determine whether an error occurred inside a subschema of oneOf or anyOf.\n    const combinatorPaths = filter(\n      errors,\n      (error) => error.keyword === 'oneOf' || error.keyword === 'anyOf'\n    ).map((error) => getControlPath(error));\n\n    return filter(errors, (error) => {\n      // Filter errors that match any keyword that we don't want to show in the UI\n      // but keep the errors for oneOf enums\n      if (\n        filteredErrorKeywords.indexOf(error.keyword) !== -1 &&\n        !isOneOfEnumSchema(error.parentSchema)\n      ) {\n        return false;\n      }\n      const controlPath = getControlPath(error);\n      let result = matchPath(controlPath);\n      // In anyOf and oneOf blocks with \"primitive\" (i.e. string, number etc.) or array subschemas,\n      // we want to make sure that errors are only shown for the correct subschema.\n      // Therefore, we compare the error's parent schema with the property's schema.\n      // In the primitive case the error's data path is the same for all subschemas:\n      // It directly points to the property defining the anyOf/oneOf.\n      // The same holds true for errors on the array level (e.g. min item amount).\n      // In contrast, this comparison must not be done for errors whose parent schema defines an object or a oneOf enum,\n      // because the parent schema can never match the property schema (e.g. for 'required' checks).\n      const parentSchema: JsonSchema | undefined = error.parentSchema;\n      if (\n        result &&\n        !isObjectSchema(parentSchema) &&\n        !isOneOfEnumSchema(parentSchema) &&\n        combinatorPaths.findIndex((p) => instancePath.startsWith(p)) !== -1\n      ) {\n        result = result && isEqual(parentSchema, schema);\n      }\n      return result;\n    });\n  };\n\n/**\n * @returns true if the schema describes an object.\n */\nconst isObjectSchema = (schema?: JsonSchema): boolean => {\n  return schema?.type === 'object' || !!schema?.properties;\n};\n\n/**\n * The error-type of an AJV error is defined by its `keyword` property.\n * Certain errors are filtered because they don't fit to any rendered control.\n * All of them have in common that we don't want to show them in the UI\n * because controls will show the actual reason why they don't match their correponding sub schema.\n * - additionalProperties: Indicates that a property is present that is not defined in the schema.\n *      Jsonforms only allows to edit defined properties. These errors occur if an oneOf doesn't match.\n * - allOf: Indicates that not all of the allOf definitions match as a whole.\n * - anyOf: Indicates that an anyOf definition itself is not valid because none of its subschemas matches.\n * - oneOf: Indicates that an oneOf definition itself is not valid because not exactly one of its subschemas matches.\n */\nconst filteredErrorKeywords = [\n  'additionalProperties',\n  'allOf',\n  'anyOf',\n  'oneOf',\n];\n\nconst getErrorsAt =\n  (\n    instancePath: string,\n    schema: JsonSchema,\n    matchPath: (path: string) => boolean\n  ) =>\n  (state: JsonFormsCore): ErrorObject[] => {\n    const errors = state.errors ?? [];\n    const additionalErrors = state.additionalErrors ?? [];\n    return errorsAt(\n      instancePath,\n      schema,\n      matchPath\n    )(\n      state.validationMode === 'ValidateAndHide'\n        ? additionalErrors\n        : [...errors, ...additionalErrors]\n    );\n  };\n\nexport const errorAt = (instancePath: string, schema: JsonSchema) =>\n  getErrorsAt(instancePath, schema, (path) => path === instancePath);\nexport const subErrorsAt = (instancePath: string, schema: JsonSchema) =>\n  getErrorsAt(instancePath, schema, (path) =>\n    path.startsWith(instancePath + '.')\n  );\n","/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport {\n  ADD_DEFAULT_DATA,\n  RegisterDefaultDataAction,\n  REMOVE_DEFAULT_DATA,\n  UnregisterDefaultDataAction,\n} from '../actions';\nimport type { Reducer } from '../util';\n\nexport interface JsonFormsDefaultDataRegistryEntry {\n  schemaPath: string;\n  data: any;\n}\n\ntype ValidDefaultDataActions =\n  | RegisterDefaultDataAction\n  | UnregisterDefaultDataAction;\n\nexport const defaultDataReducer: Reducer<\n  JsonFormsDefaultDataRegistryEntry[],\n  ValidDefaultDataActions\n> = (state = [], action) => {\n  switch (action.type) {\n    case ADD_DEFAULT_DATA:\n      return state.concat([\n        { schemaPath: action.schemaPath, data: action.data },\n      ]);\n    case REMOVE_DEFAULT_DATA:\n      return state.filter((t) => t.schemaPath !== action.schemaPath);\n    default:\n      return state;\n  }\n};\n\nexport const extractDefaultData = (\n  state: JsonFormsDefaultDataRegistryEntry[]\n): JsonFormsDefaultDataRegistryEntry[] => state;\n","import type { ErrorObject } from 'ajv';\nimport { isInternationalized, Labelable, UISchemaElement } from '../models';\nimport { getControlPath } from '../reducers';\nimport { formatErrorMessage } from '../util';\nimport type { i18nJsonSchema, ErrorTranslator, Translator } from './i18nTypes';\nimport {\n  ArrayDefaultTranslation,\n  ArrayTranslations,\n} from './arrayTranslations';\nimport {\n  CombinatorDefaultTranslation,\n  CombinatorTranslations,\n} from './combinatorTranslations';\n\nexport const getI18nKeyPrefixBySchema = (\n  schema: i18nJsonSchema | undefined,\n  uischema: unknown | undefined\n): string | undefined => {\n  if (isInternationalized(uischema)) {\n    return uischema.i18n;\n  }\n  return schema?.i18n ?? undefined;\n};\n\n/**\n * Transforms a given path to a prefix which can be used for i18n keys.\n * Returns 'root' for empty paths and removes array indices\n */\nexport const transformPathToI18nPrefix = (path: string): string => {\n  return (\n    path\n      ?.split('.')\n      .filter((segment) => !/^\\d+$/.test(segment))\n      .join('.') || 'root'\n  );\n};\n\nexport const getI18nKeyPrefix = (\n  schema: i18nJsonSchema | undefined,\n  uischema: unknown | undefined,\n  path: string | undefined\n): string => {\n  return (\n    getI18nKeyPrefixBySchema(schema, uischema) ??\n    transformPathToI18nPrefix(path)\n  );\n};\n\nexport const getI18nKey = (\n  schema: i18nJsonSchema | undefined,\n  uischema: unknown | undefined,\n  path: string | undefined,\n  key: string\n): string => {\n  return `${getI18nKeyPrefix(schema, uischema, path)}.${key}`;\n};\n\nexport const addI18nKeyToPrefix = (\n  i18nKeyPrefix: string,\n  key: string\n): string => {\n  return `${i18nKeyPrefix}.${key}`;\n};\n\nexport const defaultTranslator: Translator = (\n  _id: string,\n  defaultMessage: string | undefined\n) => defaultMessage;\n\nexport const defaultErrorTranslator: ErrorTranslator = (error, t, uischema) => {\n  // check whether there is a special keyword message\n  const i18nKey = getI18nKey(\n    error.parentSchema,\n    uischema,\n    getControlPath(error),\n    `error.${error.keyword}`\n  );\n  const specializedKeywordMessage = t(i18nKey, undefined, { error });\n  if (specializedKeywordMessage !== undefined) {\n    return specializedKeywordMessage;\n  }\n\n  // check whether there is a generic keyword message\n  const genericKeywordMessage = t(`error.${error.keyword}`, undefined, {\n    error,\n  });\n  if (genericKeywordMessage !== undefined) {\n    return genericKeywordMessage;\n  }\n\n  // check whether there is a customization for the default message\n  const messageCustomization = t(error.message, undefined, { error });\n  if (messageCustomization !== undefined) {\n    return messageCustomization;\n  }\n\n  // rewrite required property messages (if they were not customized) as we place them next to the respective input\n  if (\n    error.keyword === 'required' &&\n    error.message?.startsWith('must have required property')\n  ) {\n    return t('is a required property', 'is a required property', { error });\n  }\n\n  return error.message;\n};\n\n/**\n * Returns the determined error message for the given errors.\n * All errors must correspond to the given schema, uischema or path.\n */\nexport const getCombinedErrorMessage = (\n  errors: ErrorObject[],\n  et: ErrorTranslator,\n  t: Translator,\n  schema?: i18nJsonSchema,\n  uischema?: UISchemaElement,\n  path?: string\n) => {\n  if (errors.length > 0 && t) {\n    // check whether there is a special message which overwrites all others\n    const customErrorKey = getI18nKey(schema, uischema, path, 'error.custom');\n    const specializedErrorMessage = t(customErrorKey, undefined, {\n      schema,\n      uischema,\n      path,\n      errors,\n    });\n    if (specializedErrorMessage !== undefined) {\n      return specializedErrorMessage;\n    }\n  }\n  return formatErrorMessage(errors.map((error) => et(error, t, uischema)));\n};\n\n/**\n * This can be used to internationalize the label of the given Labelable (e.g. UI Schema elements).\n * This should not be used for controls as there we have additional context in the form of the JSON Schema available.\n */\nexport const deriveLabelForUISchemaElement = (\n  uischema: Labelable<boolean>,\n  t: Translator\n): string | undefined => {\n  if (uischema.label === false) {\n    return undefined;\n  }\n  if (\n    (uischema.label === undefined ||\n      uischema.label === null ||\n      uischema.label === true) &&\n    !isInternationalized(uischema)\n  ) {\n    return undefined;\n  }\n  const stringifiedLabel =\n    typeof uischema.label === 'string'\n      ? uischema.label\n      : JSON.stringify(uischema.label);\n  const i18nKeyPrefix = getI18nKeyPrefixBySchema(undefined, uischema);\n  const i18nKey =\n    typeof i18nKeyPrefix === 'string'\n      ? `${i18nKeyPrefix}.label`\n      : stringifiedLabel;\n  return t(i18nKey, stringifiedLabel, { uischema: uischema });\n};\n\nexport const getArrayTranslations = (\n  t: Translator,\n  defaultTranslations: ArrayDefaultTranslation[],\n  i18nKeyPrefix: string,\n  label: string\n): ArrayTranslations => {\n  const translations: ArrayTranslations = {};\n  defaultTranslations.forEach((controlElement) => {\n    const key = addI18nKeyToPrefix(i18nKeyPrefix, controlElement.key);\n    translations[controlElement.key] = t(key, controlElement.default(label));\n  });\n  return translations;\n};\n\nexport const getCombinatorTranslations = (\n  t: Translator,\n  defaultTranslations: CombinatorDefaultTranslation[],\n  i18nKeyPrefix: string,\n  label: string\n): CombinatorTranslations => {\n  const translations: CombinatorTranslations = {};\n  defaultTranslations.forEach((controlElement) => {\n    const key = addI18nKeyToPrefix(i18nKeyPrefix, controlElement.key);\n    translations[controlElement.key] = t(key, controlElement.default(label));\n  });\n  return translations;\n};\n","export interface ArrayDefaultTranslation {\n  key: ArrayTranslationEnum;\n  default: (variable?: string) => string;\n}\n\nexport enum ArrayTranslationEnum {\n  addTooltip = 'addTooltip',\n  addAriaLabel = 'addAriaLabel',\n  removeTooltip = 'removeTooltip',\n  upAriaLabel = 'upAriaLabel',\n  downAriaLabel = 'downAriaLabel',\n  noSelection = 'noSelection',\n  removeAriaLabel = 'removeAriaLabel',\n  noDataMessage = 'noDataMessage',\n  deleteDialogTitle = 'deleteDialogTitle',\n  deleteDialogMessage = 'deleteDialogMessage',\n  deleteDialogAccept = 'deleteDialogAccept',\n  deleteDialogDecline = 'deleteDialogDecline',\n  up = 'up',\n  down = 'down',\n}\n\nexport type ArrayTranslations = {\n  [key in ArrayTranslationEnum]?: string;\n};\n\nexport const arrayDefaultTranslations: ArrayDefaultTranslation[] = [\n  {\n    key: ArrayTranslationEnum.addTooltip,\n    default: (input) => (input ? `Add to ${input}` : 'Add'),\n  },\n  {\n    key: ArrayTranslationEnum.addAriaLabel,\n    default: (input) => (input ? `Add to ${input} button` : 'Add button'),\n  },\n  { key: ArrayTranslationEnum.removeTooltip, default: () => 'Delete' },\n  { key: ArrayTranslationEnum.removeAriaLabel, default: () => 'Delete button' },\n  { key: ArrayTranslationEnum.upAriaLabel, default: () => `Move item up` },\n  { key: ArrayTranslationEnum.up, default: () => 'Up' },\n  { key: ArrayTranslationEnum.down, default: () => 'Down' },\n  { key: ArrayTranslationEnum.downAriaLabel, default: () => `Move item down` },\n  { key: ArrayTranslationEnum.noDataMessage, default: () => 'No data' },\n  { key: ArrayTranslationEnum.noSelection, default: () => 'No selection' },\n  {\n    key: ArrayTranslationEnum.deleteDialogTitle,\n    default: () => 'Confirm Deletion',\n  },\n  {\n    key: ArrayTranslationEnum.deleteDialogMessage,\n    default: () => 'Are you sure you want to delete the selected entry?',\n  },\n  { key: ArrayTranslationEnum.deleteDialogAccept, default: () => 'Yes' },\n  { key: ArrayTranslationEnum.deleteDialogDecline, default: () => 'No' },\n];\n","export interface CombinatorDefaultTranslation {\n  key: CombinatorTranslationEnum;\n  default: (variable?: string) => string;\n}\n\nexport enum CombinatorTranslationEnum {\n  clearDialogTitle = 'clearDialogTitle',\n  clearDialogMessage = 'clearDialogMessage',\n  clearDialogAccept = 'clearDialogAccept',\n  clearDialogDecline = 'clearDialogDecline',\n}\n\nexport type CombinatorTranslations = {\n  [key in CombinatorTranslationEnum]?: string;\n};\n\nexport const combinatorDefaultTranslations: CombinatorDefaultTranslation[] = [\n  {\n    key: CombinatorTranslationEnum.clearDialogTitle,\n    default: () => 'Clear form?',\n  },\n  {\n    key: CombinatorTranslationEnum.clearDialogMessage,\n    default: () => 'Your data will be cleared. Do you want to proceed?',\n  },\n  { key: CombinatorTranslationEnum.clearDialogAccept, default: () => 'Yes' },\n  { key: CombinatorTranslationEnum.clearDialogDecline, default: () => 'No' },\n];\n","/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport {\n  defaultErrorTranslator,\n  defaultTranslator,\n  JsonFormsI18nState,\n} from '../i18n';\nimport {\n  I18nActions,\n  SET_LOCALE,\n  SET_TRANSLATOR,\n  UPDATE_I18N,\n} from '../actions';\nimport type { Reducer } from '../util';\n\nexport const defaultJsonFormsI18nState: Required<JsonFormsI18nState> = {\n  locale: 'en',\n  translate: defaultTranslator,\n  translateError: defaultErrorTranslator,\n};\n\nexport const i18nReducer: Reducer<JsonFormsI18nState, I18nActions> = (\n  state = defaultJsonFormsI18nState,\n  action\n) => {\n  switch (action.type) {\n    case UPDATE_I18N: {\n      const locale = action.locale ?? defaultJsonFormsI18nState.locale;\n      const translate =\n        action.translator ?? defaultJsonFormsI18nState.translate;\n      const translateError =\n        action.errorTranslator ?? defaultJsonFormsI18nState.translateError;\n\n      if (\n        locale !== state.locale ||\n        translate !== state.translate ||\n        translateError !== state.translateError\n      ) {\n        return {\n          ...state,\n          locale,\n          translate,\n          translateError,\n        };\n      }\n      return state;\n    }\n    case SET_TRANSLATOR:\n      return {\n        ...state,\n        translate: action.translator ?? defaultTranslator,\n        translateError: action.errorTranslator ?? defaultErrorTranslator,\n      };\n    case SET_LOCALE:\n      return {\n        ...state,\n        locale: action.locale ?? navigator.languages[0],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const fetchLocale = (state?: JsonFormsI18nState) => {\n  if (state === undefined) {\n    return undefined;\n  }\n  return state.locale;\n};\n\nexport const fetchTranslator = (state?: JsonFormsI18nState) => {\n  if (state === undefined) {\n    return defaultTranslator;\n  }\n  return state.translate;\n};\n\nexport const fetchErrorTranslator = (state?: JsonFormsI18nState) => {\n  if (state === undefined) {\n    return defaultErrorTranslator;\n  }\n  return state.translateError;\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport type { RankedTester } from '../testers';\nimport {\n  ADD_RENDERER,\n  AddRendererAction,\n  REMOVE_RENDERER,\n  RemoveRendererAction,\n} from '../actions';\nimport type { Reducer } from '../util';\n\nexport interface JsonFormsRendererRegistryEntry {\n  tester: RankedTester;\n  renderer: any;\n}\n\ntype ValidRendererReducerActions = AddRendererAction | RemoveRendererAction;\n\nexport const rendererReducer: Reducer<\n  JsonFormsRendererRegistryEntry[],\n  ValidRendererReducerActions\n> = (state = [], action) => {\n  switch (action.type) {\n    case ADD_RENDERER:\n      return state.concat([\n        { tester: action.tester, renderer: action.renderer },\n      ]);\n    case REMOVE_RENDERER:\n      return state.filter((t) => t.tester !== action.tester);\n    default:\n      return state;\n  }\n};\n","/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\nimport endsWith from 'lodash/endsWith';\nimport last from 'lodash/last';\nimport isArray from 'lodash/isArray';\nimport reduce from 'lodash/reduce';\nimport toPairs from 'lodash/toPairs';\nimport includes from 'lodash/includes';\nimport type {\n  Categorization,\n  ControlElement,\n  JsonSchema,\n  UISchemaElement,\n} from '../models';\nimport {\n  deriveTypes,\n  hasType,\n  isOneOfEnumSchema,\n  resolveSchema,\n} from '../util';\n\n/**\n * Constant that indicates that a tester is not capable of handling\n * a combination of schema/data.\n * @type {number}\n */\nexport const NOT_APPLICABLE = -1;\n/**\n * A tester is a function that receives an UI schema and a JSON schema and returns a boolean.\n * The rootSchema is handed over as context. Can be used to resolve references.\n */\nexport type Tester = (\n  uischema: UISchemaElement,\n  schema: JsonSchema,\n  context: TesterContext\n) => boolean;\n\n/**\n * A ranked tester associates a tester with a number.\n */\nexport type RankedTester = (\n  uischema: UISchemaElement,\n  schema: JsonSchema,\n  context: TesterContext\n) => number;\n\n/**\n * Additional context given to a tester in addition to UISchema and JsonSchema.\n */\nexport interface TesterContext {\n  /** The root JsonSchema of the form. Can be used to resolve references. */\n  rootSchema: JsonSchema;\n  /** The form wide configuration object given to JsonForms. */\n  config: any;\n}\n\nexport const isControl = (uischema: any): uischema is ControlElement =>\n  !isEmpty(uischema) && uischema.scope !== undefined;\n\n/**\n * Only applicable for Controls.\n *\n * This function checks whether the given UI schema is of type Control\n * and if so, resolves the sub-schema referenced by the control and applies\n * the given predicate\n *\n * @param {(JsonSchema) => boolean} predicate the predicate that should be\n *        applied to the resolved sub-schema\n */\nexport const schemaMatches =\n  (\n    predicate: (schema: JsonSchema, rootSchema: JsonSchema) => boolean\n  ): Tester =>\n  (\n    uischema: UISchemaElement,\n    schema: JsonSchema,\n    context: TesterContext\n  ): boolean => {\n    if (isEmpty(uischema) || !isControl(uischema)) {\n      return false;\n    }\n    if (isEmpty(schema)) {\n      return false;\n    }\n    const schemaPath = uischema.scope;\n    if (isEmpty(schemaPath)) {\n      return false;\n    }\n    let currentDataSchema = schema;\n    if (hasType(schema, 'object')) {\n      currentDataSchema = resolveSchema(\n        schema,\n        schemaPath,\n        context?.rootSchema\n      );\n    }\n    if (currentDataSchema === undefined) {\n      return false;\n    }\n\n    return predicate(currentDataSchema, context?.rootSchema);\n  };\n\nexport const schemaSubPathMatches =\n  (\n    subPath: string,\n    predicate: (schema: JsonSchema, rootSchema: JsonSchema) => boolean\n  ): Tester =>\n  (\n    uischema: UISchemaElement,\n    schema: JsonSchema,\n    context: TesterContext\n  ): boolean => {\n    if (isEmpty(uischema) || !isControl(uischema)) {\n      return false;\n    }\n    const schemaPath = uischema.scope;\n    let currentDataSchema: JsonSchema = schema;\n    if (hasType(schema, 'object')) {\n      currentDataSchema = resolveSchema(\n        schema,\n        schemaPath,\n        context?.rootSchema\n      );\n    }\n    currentDataSchema = get(currentDataSchema, subPath);\n\n    if (currentDataSchema === undefined) {\n      return false;\n    }\n\n    return predicate(currentDataSchema, context?.rootSchema);\n  };\n\n/**\n * Only applicable for Controls.\n *\n * This function checks whether the given UI schema is of type Control\n * and if so, resolves the sub-schema referenced by the control and checks\n * whether the type of the sub-schema matches the expected one.\n *\n * @param {string} expectedType the expected type of the resolved sub-schema\n */\nexport const schemaTypeIs = (expectedType: string): Tester =>\n  schemaMatches((schema) => !isEmpty(schema) && hasType(schema, expectedType));\n\n/**\n * Only applicable for Controls.\n *\n * This function checks whether the given UI schema is of type Control\n * and if so, resolves the sub-schema referenced by the control and checks\n * whether the format of the sub-schema matches the expected one.\n *\n * @param {string} expectedFormat the expected format of the resolved sub-schema\n */\nexport const formatIs = (expectedFormat: string): Tester =>\n  schemaMatches(\n    (schema) =>\n      !isEmpty(schema) &&\n      schema.format === expectedFormat &&\n      hasType(schema, 'string')\n  );\n\n/**\n * Checks whether the given UI schema has the expected type.\n *\n * @param {string} expected the expected UI schema type\n */\nexport const uiTypeIs =\n  (expected: string): Tester =>\n  (uischema: UISchemaElement): boolean =>\n    !isEmpty(uischema) && uischema.type === expected;\n\n/**\n * Checks whether the given UI schema has an option with the given\n * name and whether it has the expected value. If no options property\n * is set, returns false.\n *\n * @param {string} optionName the name of the option to check\n * @param {any} optionValue the expected value of the option\n */\nexport const optionIs =\n  (optionName: string, optionValue: any): Tester =>\n  (uischema: UISchemaElement): boolean => {\n    if (isEmpty(uischema)) {\n      return false;\n    }\n\n    const options = uischema.options;\n    return !isEmpty(options) && options[optionName] === optionValue;\n  };\n\n/**\n * Only applicable for Controls.\n *\n * Checks whether the scope of a control ends with the expected string.\n *\n * @param {string} expected the expected ending of the reference\n */\nexport const scopeEndsWith =\n  (expected: string): Tester =>\n  (uischema: UISchemaElement): boolean => {\n    if (isEmpty(expected) || !isControl(uischema)) {\n      return false;\n    }\n\n    return endsWith(uischema.scope, expected);\n  };\n\n/**\n * Only applicable for Controls.\n *\n * Checks whether the last segment of the scope matches the expected string.\n *\n * @param {string} expected the expected ending of the reference\n */\nexport const scopeEndIs =\n  (expected: string): Tester =>\n  (uischema: UISchemaElement): boolean => {\n    if (isEmpty(expected) || !isControl(uischema)) {\n      return false;\n    }\n    const schemaPath = uischema.scope;\n\n    return !isEmpty(schemaPath) && last(schemaPath.split('/')) === expected;\n  };\n\n/**\n * A tester that allow composing other testers by && them.\n *\n * @param {Array<Tester>} testers the testers to be composed\n */\nexport const and =\n  (...testers: Tester[]): Tester =>\n  (uischema: UISchemaElement, schema: JsonSchema, context: TesterContext) =>\n    testers.reduce(\n      (acc, tester) => acc && tester(uischema, schema, context),\n      true\n    );\n\n/**\n * A tester that allow composing other testers by || them.\n *\n * @param {Array<Tester>} testers the testers to be composed\n */\nexport const or =\n  (...testers: Tester[]): Tester =>\n  (uischema: UISchemaElement, schema: JsonSchema, context: TesterContext) =>\n    testers.reduce(\n      (acc, tester) => acc || tester(uischema, schema, context),\n      false\n    );\n/**\n * Create a ranked tester that will associate a number with a given tester, if the\n * latter returns true.\n *\n * @param {number} rank the rank to be returned in case the tester returns true\n * @param {Tester} tester a tester\n */\nexport const rankWith =\n  (rank: number, tester: Tester) =>\n  (\n    uischema: UISchemaElement,\n    schema: JsonSchema,\n    context: TesterContext\n  ): number => {\n    if (tester(uischema, schema, context)) {\n      return rank;\n    }\n\n    return NOT_APPLICABLE;\n  };\n\nexport const withIncreasedRank =\n  (by: number, rankedTester: RankedTester) =>\n  (\n    uischema: UISchemaElement,\n    schema: JsonSchema,\n    context: TesterContext\n  ): number => {\n    const rank = rankedTester(uischema, schema, context);\n    if (rank === NOT_APPLICABLE) {\n      return NOT_APPLICABLE;\n    }\n\n    return rank + by;\n  };\n\n/**\n * Default tester for boolean.\n * @type {RankedTester}\n */\nexport const isBooleanControl = and(\n  uiTypeIs('Control'),\n  schemaTypeIs('boolean')\n);\n\n// TODO: rather check for properties property\nexport const isObjectControl = and(uiTypeIs('Control'), schemaTypeIs('object'));\n\nexport const isAllOfControl = and(\n  uiTypeIs('Control'),\n  schemaMatches((schema) =>\n    Object.prototype.hasOwnProperty.call(schema, 'allOf')\n  )\n);\n\nexport const isAnyOfControl = and(\n  uiTypeIs('Control'),\n  schemaMatches((schema) =>\n    Object.prototype.hasOwnProperty.call(schema, 'anyOf')\n  )\n);\n\nexport const isOneOfControl = and(\n  uiTypeIs('Control'),\n  schemaMatches((schema) =>\n    Object.prototype.hasOwnProperty.call(schema, 'oneOf')\n  )\n);\n\n/**\n * Tests whether the given UI schema is of type Control and if the schema\n * has an enum.\n * @type {Tester}\n */\nexport const isEnumControl = and(\n  uiTypeIs('Control'),\n  or(\n    schemaMatches((schema) =>\n      Object.prototype.hasOwnProperty.call(schema, 'enum')\n    ),\n    schemaMatches((schema) =>\n      Object.prototype.hasOwnProperty.call(schema, 'const')\n    )\n  )\n);\n\n/**\n * Tests whether the given UI schema is of type Control and if the schema\n * has an enum based on oneOf.\n * @type {Tester}\n */\nexport const isOneOfEnumControl = and(\n  uiTypeIs('Control'),\n  schemaMatches((schema) => isOneOfEnumSchema(schema))\n);\n\n/**\n * Tests whether the given UI schema is of type Control and if the schema\n * is of type integer\n * @type {Tester}\n */\nexport const isIntegerControl = and(\n  uiTypeIs('Control'),\n  schemaTypeIs('integer')\n);\n\n/**\n * Tests whether the given UI schema is of type Control and if the schema\n * is of type number\n * @type {Tester}\n */\nexport const isNumberControl = and(uiTypeIs('Control'), schemaTypeIs('number'));\n\n/**\n * Tests whether the given UI schema is of type Control and if the schema\n * is of type string\n * @type {Tester}\n */\nexport const isStringControl = and(uiTypeIs('Control'), schemaTypeIs('string'));\n\n/**\n * Tests whether the given UI schema is of type Control and if is has\n * a 'multi' option.\n * @type {Tester}\n */\nexport const isMultiLineControl = and(\n  uiTypeIs('Control'),\n  optionIs('multi', true)\n);\n\n/**\n * Tests whether the given UI schema is of type Control and whether the schema\n * or uischema options has a 'date' format.\n * @type {Tester}\n */\nexport const isDateControl = and(\n  uiTypeIs('Control'),\n  or(formatIs('date'), optionIs('format', 'date'))\n);\n\n/**\n * Tests whether the given UI schema is of type Control and whether the schema\n * or the uischema options has a 'time' format.\n * @type {Tester}\n */\nexport const isTimeControl = and(\n  uiTypeIs('Control'),\n  or(formatIs('time'), optionIs('format', 'time'))\n);\n\n/**\n * Tests whether the given UI schema is of type Control and whether the schema\n * or the uischema options has a 'date-time' format.\n * @type {Tester}\n */\nexport const isDateTimeControl = and(\n  uiTypeIs('Control'),\n  or(formatIs('date-time'), optionIs('format', 'date-time'))\n);\n\n/**\n * Tests whether the given schema is an array of objects.\n * @type {Tester}\n */\nexport const isObjectArray = and(\n  schemaMatches(\n    (schema, rootSchema) =>\n      hasType(schema, 'array') &&\n      !Array.isArray(resolveSchema(schema, 'items', rootSchema)) // we don't care about tuples\n  ),\n  schemaSubPathMatches('items', (schema, rootSchema) => {\n    const resolvedSchema = schema.$ref\n      ? resolveSchema(rootSchema, schema.$ref, rootSchema)\n      : schema;\n    return hasType(resolvedSchema, 'object');\n  })\n);\n\n/**\n * Tests whether the given UI schema is of type Control and if the schema\n * is an array of objects.\n * @type {Tester}\n */\nexport const isObjectArrayControl = and(uiTypeIs('Control'), isObjectArray);\n\nconst traverse = (\n  any: JsonSchema | JsonSchema[],\n  pred: (obj: JsonSchema) => boolean,\n  rootSchema: JsonSchema\n): boolean => {\n  if (isArray(any)) {\n    return reduce(\n      any,\n      (acc, el) => acc || traverse(el, pred, rootSchema),\n      false\n    );\n  }\n\n  if (pred(any)) {\n    return true;\n  }\n\n  if (any.$ref) {\n    const toTraverse = resolveSchema(rootSchema, any.$ref, rootSchema);\n    if (toTraverse && !toTraverse.$ref) {\n      return traverse(toTraverse, pred, rootSchema);\n    }\n  }\n\n  if (any.items) {\n    return traverse(any.items, pred, rootSchema);\n  }\n  if (any.properties) {\n    return reduce(\n      toPairs(any.properties),\n      (acc, [_key, val]) => acc || traverse(val, pred, rootSchema),\n      false\n    );\n  }\n\n  return false;\n};\n\nexport const isObjectArrayWithNesting = (\n  uischema: UISchemaElement,\n  schema: JsonSchema,\n  context: TesterContext\n): boolean => {\n  if (!uiTypeIs('Control')(uischema, schema, context)) {\n    return false;\n  }\n  const schemaPath = (uischema as ControlElement).scope;\n  const resolvedSchema = resolveSchema(\n    schema,\n    schemaPath,\n    context?.rootSchema ?? schema\n  );\n  let objectDepth = 0;\n  if (resolvedSchema !== undefined && resolvedSchema.items !== undefined) {\n    // check if nested arrays\n    if (\n      traverse(\n        resolvedSchema.items,\n        (val) => {\n          if (val === schema) {\n            return false;\n          }\n          if (val.$ref !== undefined) {\n            return false;\n          }\n          if (val.anyOf || val.allOf) {\n            return true;\n          }\n          if (val.oneOf && !isOneOfEnumSchema(val)) {\n            return true;\n          }\n          if (hasType(val, 'object')) {\n            objectDepth++;\n            if (objectDepth === 2) {\n              return true;\n            }\n          }\n          if (hasType(val, 'array')) {\n            return true;\n          }\n          return false;\n        },\n        context?.rootSchema\n      )\n    ) {\n      return true;\n    }\n    // check if uischema options detail is set\n    if (uischema.options && uischema.options.detail) {\n      if (typeof uischema.options.detail === 'string') {\n        return uischema.options.detail.toUpperCase() !== 'DEFAULT';\n      } else if (\n        typeof uischema.options.detail === 'object' &&\n        uischema.options.detail.type\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n/**\n * Synonym for isObjectArrayControl\n */\nexport const isArrayObjectControl = isObjectArrayControl;\n\n/**\n * Tests whether the given UI schema is of type Control and if the schema\n * is an array of a primitive type.\n * @type {Tester}\n */\nexport const isPrimitiveArrayControl = and(\n  uiTypeIs('Control'),\n  schemaMatches(\n    (schema, rootSchema) =>\n      deriveTypes(schema).length !== 0 &&\n      !Array.isArray(resolveSchema(schema, 'items', rootSchema)) // we don't care about tuples\n  ),\n  schemaSubPathMatches('items', (schema, rootSchema) => {\n    const resolvedSchema = schema.$ref\n      ? resolveSchema(rootSchema, schema.$ref, rootSchema)\n      : schema;\n    const types = deriveTypes(resolvedSchema);\n    return (\n      types.length === 1 &&\n      includes(['integer', 'number', 'boolean', 'string'], types[0])\n    );\n  })\n);\n\n/**\n * Tests whether a given UI schema is of type Control,\n * if the schema is of type number or integer and\n * whether the schema defines a numerical range with a default value.\n * @type {Tester}\n */\nexport const isRangeControl = and(\n  uiTypeIs('Control'),\n  or(schemaTypeIs('number'), schemaTypeIs('integer')),\n  schemaMatches(\n    (schema) =>\n      Object.prototype.hasOwnProperty.call(schema, 'maximum') &&\n      Object.prototype.hasOwnProperty.call(schema, 'minimum') &&\n      Object.prototype.hasOwnProperty.call(schema, 'default')\n  ),\n  optionIs('slider', true)\n);\n\n/**\n * Tests whether the given UI schema is of type Control, if the schema\n * is of type integer and has option format\n * @type {Tester}\n */\nexport const isNumberFormatControl = and(\n  uiTypeIs('Control'),\n  schemaTypeIs('integer'),\n  optionIs('format', true)\n);\n\nexport const isCategorization = (\n  category: UISchemaElement\n): category is Categorization => category.type === 'Categorization';\n\nexport const isCategory = (uischema: UISchemaElement): boolean =>\n  uischema.type === 'Category';\n\nexport const hasCategory = (categorization: Categorization): boolean => {\n  if (isEmpty(categorization.elements)) {\n    return false;\n  }\n  // all children of the categorization have to be categories\n  return categorization.elements\n    .map((elem) =>\n      isCategorization(elem) ? hasCategory(elem) : isCategory(elem)\n    )\n    .reduce((prev, curr) => prev && curr, true);\n};\n\nexport const categorizationHasCategory = (uischema: UISchemaElement) =>\n  hasCategory(uischema as Categorization);\n\nexport const not =\n  (tester: Tester): Tester =>\n  (uischema: UISchemaElement, schema: JsonSchema, context: TesterContext) =>\n    !tester(uischema, schema, context);\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport maxBy from 'lodash/maxBy';\nimport remove from 'lodash/remove';\nimport { ADD_UI_SCHEMA, REMOVE_UI_SCHEMA, UISchemaActions } from '../actions';\nimport { NOT_APPLICABLE } from '../testers';\nimport type { JsonSchema, UISchemaElement } from '../models';\nimport type { Reducer } from '../util';\n\nexport type UISchemaTester = (\n  schema: JsonSchema,\n  schemaPath: string,\n  path: string\n) => number;\n\nexport interface JsonFormsUISchemaRegistryEntry {\n  tester: UISchemaTester;\n  uischema: UISchemaElement;\n}\n\nexport const uischemaRegistryReducer: Reducer<\n  JsonFormsUISchemaRegistryEntry[],\n  UISchemaActions\n> = (state = [], action) => {\n  switch (action.type) {\n    case ADD_UI_SCHEMA:\n      return state\n        .slice()\n        .concat({ tester: action.tester, uischema: action.uischema });\n    case REMOVE_UI_SCHEMA: {\n      const copy = state.slice();\n      remove(copy, (entry) => entry.tester === action.tester);\n      return copy;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const findMatchingUISchema =\n  (state: JsonFormsUISchemaRegistryEntry[]) =>\n  (\n    jsonSchema: JsonSchema,\n    schemaPath: string,\n    path: string\n  ): UISchemaElement => {\n    const match = maxBy(state, (entry) =>\n      entry.tester(jsonSchema, schemaPath, path)\n    );\n    if (\n      match !== undefined &&\n      match.tester(jsonSchema, schemaPath, path) !== NOT_APPLICABLE\n    ) {\n      return match.uischema;\n    }\n    return undefined;\n  };\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport type { ControlElement, UISchemaElement } from '../models';\nimport { coreReducer, errorAt, subErrorsAt } from './core';\nimport { defaultDataReducer } from './default-data';\nimport { rendererReducer } from './renderers';\nimport type { JsonFormsState } from '../store';\nimport type { JsonFormsUISchemaRegistryEntry } from './uischemas';\nimport { findMatchingUISchema, uischemaRegistryReducer } from './uischemas';\nimport { fetchErrorTranslator, fetchLocale, i18nReducer } from './i18n';\n\nimport { Generate } from '../generators';\nimport type { JsonSchema } from '../models/jsonSchema';\n\nimport { cellReducer } from './cells';\nimport { configReducer } from './config';\nimport get from 'lodash/get';\nimport { fetchTranslator } from '.';\nimport type { ErrorTranslator, Translator } from '../i18n';\n\nexport const jsonFormsReducerConfig = {\n  core: coreReducer,\n  renderers: rendererReducer,\n  cells: cellReducer,\n  config: configReducer,\n  uischemas: uischemaRegistryReducer,\n  defaultData: defaultDataReducer,\n  i18n: i18nReducer,\n};\n\n/**\n * Finds a registered UI schema to use, if any.\n * @param schema the JSON schema describing the data to be rendered\n * @param schemaPath the according schema path\n * @param path the instance path\n * @param fallback the type of the layout to use or a UI-schema-generator function\n * @param control may be checked for embedded inline uischema options\n */\nexport const findUISchema = (\n  uischemas: JsonFormsUISchemaRegistryEntry[],\n  schema: JsonSchema,\n  schemaPath: string,\n  path: string,\n  fallback: string | (() => UISchemaElement) = 'VerticalLayout',\n  control?: ControlElement,\n  rootSchema?: JsonSchema\n): UISchemaElement => {\n  // handle options\n  if (control && control.options && control.options.detail) {\n    if (typeof control.options.detail === 'string') {\n      if (control.options.detail.toUpperCase() === 'GENERATE') {\n        //use fallback generation function\n        if (typeof fallback === 'function') {\n          return fallback();\n        }\n        // force generation of uischema\n        return Generate.uiSchema(schema, fallback, undefined, rootSchema);\n      }\n    } else if (typeof control.options.detail === 'object') {\n      // check if detail is a valid uischema\n      if (\n        control.options.detail.type &&\n        typeof control.options.detail.type === 'string'\n      ) {\n        return control.options.detail as UISchemaElement;\n      }\n    }\n  }\n  // default\n  const uiSchema = findMatchingUISchema(uischemas)(schema, schemaPath, path);\n  if (uiSchema === undefined) {\n    //use fallback generation function\n    if (typeof fallback === 'function') {\n      return fallback();\n    }\n    return Generate.uiSchema(schema, fallback, '#', rootSchema);\n  }\n  return uiSchema;\n};\n\nexport const getErrorAt =\n  (instancePath: string, schema: JsonSchema) => (state: JsonFormsState) => {\n    return errorAt(instancePath, schema)(state.jsonforms.core);\n  };\n\nexport const getSubErrorsAt =\n  (instancePath: string, schema: JsonSchema) => (state: JsonFormsState) =>\n    subErrorsAt(instancePath, schema)(state.jsonforms.core);\n\nexport const getConfig = (state: JsonFormsState) => state.jsonforms.config;\n\nexport const getLocale = (state: JsonFormsState) =>\n  fetchLocale(get(state, 'jsonforms.i18n'));\n\nexport const getTranslator =\n  () =>\n  (state: JsonFormsState): Translator =>\n    fetchTranslator(get(state, 'jsonforms.i18n'));\n\nexport const getErrorTranslator =\n  () =>\n  (state: JsonFormsState): ErrorTranslator =>\n    fetchErrorTranslator(get(state, 'jsonforms.i18n'));\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport get from 'lodash/get';\nimport type Ajv from 'ajv';\nimport type { JsonFormsState } from '../store';\nimport type { JsonSchema, UISchemaElement } from '../models';\nimport {\n  extractAjv,\n  extractData,\n  extractSchema,\n  extractUiSchema,\n} from './core';\nimport {\n  extractDefaultData,\n  JsonFormsDefaultDataRegistryEntry,\n} from './default-data';\nimport type { JsonFormsRendererRegistryEntry } from './renderers';\nimport type { JsonFormsCellRendererRegistryEntry } from './cells';\nimport type { JsonFormsUISchemaRegistryEntry } from './uischemas';\n\nexport const getData = (state: JsonFormsState) =>\n  extractData(get(state, 'jsonforms.core'));\nexport const getSchema = (state: JsonFormsState): JsonSchema =>\n  extractSchema(get(state, 'jsonforms.core'));\nexport const getUiSchema = (state: JsonFormsState): UISchemaElement =>\n  extractUiSchema(get(state, 'jsonforms.core'));\nexport const getAjv = (state: JsonFormsState): Ajv =>\n  extractAjv(get(state, 'jsonforms.core'));\nexport const getDefaultData = (\n  state: JsonFormsState\n): JsonFormsDefaultDataRegistryEntry[] =>\n  extractDefaultData(get(state, 'jsonforms.defaultData'));\nexport const getRenderers = (\n  state: JsonFormsState\n): JsonFormsRendererRegistryEntry[] => get(state, 'jsonforms.renderers');\nexport const getCells = (\n  state: JsonFormsState\n): JsonFormsCellRendererRegistryEntry[] => get(state, 'jsonforms.cells');\nexport const getUISchemas = (\n  state: JsonFormsState\n): JsonFormsUISchemaRegistryEntry[] => get(state, 'jsonforms.uischemas');\n","/*\n  The MIT License\n\n  Copyright (c) 2023 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\nimport { CoreActions } from '../actions';\nimport { JsonFormsCore } from './core';\n\nexport interface Middleware {\n  (\n    state: JsonFormsCore,\n    action: CoreActions,\n    defaultReducer: (state: JsonFormsCore, action: CoreActions) => JsonFormsCore\n  ): JsonFormsCore;\n}\nexport const defaultMiddleware: Middleware = (state, action, defaultReducer) =>\n  defaultReducer(state, action);\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport isEmpty from 'lodash/isEmpty';\nimport range from 'lodash/range';\nimport { isScoped, Scopable } from '../models';\n\nexport const compose = (path1: string, path2: string) => {\n  let p1 = path1;\n  if (!isEmpty(path1) && !isEmpty(path2) && !path2.startsWith('[')) {\n    p1 = path1 + '.';\n  }\n\n  if (isEmpty(p1)) {\n    return path2;\n  } else if (isEmpty(path2)) {\n    return p1;\n  } else {\n    return `${p1}${path2}`;\n  }\n};\n\nexport { compose as composePaths };\n\n/**\n * Convert a schema path (i.e. JSON pointer) to an array by splitting\n * at the '/' character and removing all schema-specific keywords.\n *\n * The returned value can be used to de-reference a root object by folding over it\n * and de-referencing the single segments to obtain a new object.\n *\n *\n * @param {string} schemaPath the schema path to be converted\n * @returns {string[]} an array containing only non-schema-specific segments\n */\nexport const toDataPathSegments = (schemaPath: string): string[] => {\n  const s = schemaPath\n    .replace(/(anyOf|allOf|oneOf)\\/[\\d]+\\//g, '')\n    .replace(/(then|else)\\//g, '');\n  const segments = s.split('/');\n\n  const decodedSegments = segments.map(decode);\n\n  const startFromRoot = decodedSegments[0] === '#' || decodedSegments[0] === '';\n  const startIndex = startFromRoot ? 2 : 1;\n  return range(startIndex, decodedSegments.length, 2).map(\n    (idx) => decodedSegments[idx]\n  );\n};\n\n/**\n * Convert a schema path (i.e. JSON pointer) to a data path.\n *\n * Data paths can be used in field change event handlers like handleChange.\n *\n * @example\n * toDataPath('#/properties/foo/properties/bar') === 'foo.bar')\n *\n * @param {string} schemaPath the schema path to be converted\n * @returns {string} the data path\n */\nexport const toDataPath = (schemaPath: string): string => {\n  return toDataPathSegments(schemaPath).join('.');\n};\n\nexport const composeWithUi = (scopableUi: Scopable, path: string): string => {\n  if (!isScoped(scopableUi)) {\n    return path ?? '';\n  }\n\n  const segments = toDataPathSegments(scopableUi.scope);\n\n  if (isEmpty(segments)) {\n    return path ?? '';\n  }\n\n  return compose(path, segments.join('.'));\n};\n\n/**\n * Encodes the given segment to be used as part of a JSON Pointer\n *\n * JSON Pointer has special meaning for \"/\" and \"~\", therefore these must be encoded\n */\nexport const encode = (segment: string) =>\n  segment?.replace(/~/g, '~0').replace(/\\//g, '~1');\n/**\n * Decodes a given JSON Pointer segment to its \"normal\" representation\n */\nexport const decode = (pointerSegment: string) =>\n  pointerSegment?.replace(/~1/g, '/').replace(/~0/, '~');\n","/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\nimport type { JsonSchema, JsonSchema7 } from '../models';\nimport { decode } from './path';\n\n/**\n * Map for storing refs and the respective schemas they are pointing to.\n */\nexport interface ReferenceSchemaMap {\n  [ref: string]: JsonSchema;\n}\n\nconst isObjectSchema = (schema: JsonSchema): boolean => {\n  return schema.properties !== undefined;\n};\nconst isArraySchema = (schema: JsonSchema): boolean => {\n  return schema.type === 'array' && schema.items !== undefined;\n};\n\nexport const resolveData = (instance: any, dataPath: string): any => {\n  if (isEmpty(dataPath)) {\n    return instance;\n  }\n  const dataPathSegments = dataPath.split('.');\n\n  return dataPathSegments.reduce((curInstance, decodedSegment) => {\n    if (\n      !curInstance ||\n      !Object.prototype.hasOwnProperty.call(curInstance, decodedSegment)\n    ) {\n      return undefined;\n    }\n\n    return curInstance[decodedSegment];\n  }, instance);\n};\n\n/**\n * Finds all references inside the given schema.\n *\n * @param schema The {@link JsonSchema} to find the references in\n * @param result The initial result map, default: empty map (this parameter is used for recursion\n *               inside the function)\n * @param resolveTuples Whether arrays of tuples should be considered; default: false\n */\nexport const findAllRefs = (\n  schema: JsonSchema,\n  result: ReferenceSchemaMap = {},\n  resolveTuples = false\n): ReferenceSchemaMap => {\n  if (isObjectSchema(schema)) {\n    Object.keys(schema.properties).forEach((key) =>\n      findAllRefs(schema.properties[key], result)\n    );\n  }\n  if (isArraySchema(schema)) {\n    if (Array.isArray(schema.items)) {\n      if (resolveTuples) {\n        const items: JsonSchema[] = schema.items;\n        items.forEach((child) => findAllRefs(child, result));\n      }\n    } else {\n      findAllRefs(schema.items, result);\n    }\n  }\n  if (Array.isArray(schema.anyOf)) {\n    const anyOf: JsonSchema[] = schema.anyOf;\n    anyOf.forEach((child) => findAllRefs(child, result));\n  }\n  if (schema.$ref !== undefined) {\n    result[schema.$ref] = schema;\n  }\n\n  return result;\n};\n\nconst invalidSegment = (pathSegment: string) =>\n  pathSegment === '#' || pathSegment === undefined || pathSegment === '';\n\n/**\n * Resolve the given schema path in order to obtain a subschema.\n * @param {JsonSchema} schema the root schema from which to start\n * @param {string} schemaPath the schema path to be resolved\n * @param {JsonSchema} rootSchema the actual root schema\n * @returns {JsonSchema} the resolved sub-schema\n */\nexport const resolveSchema = (\n  schema: JsonSchema,\n  schemaPath: string,\n  rootSchema: JsonSchema\n): JsonSchema => {\n  const segments = schemaPath?.split('/').map(decode);\n  return resolveSchemaWithSegments(schema, segments, rootSchema);\n};\n\nconst resolveSchemaWithSegments = (\n  schema: JsonSchema,\n  pathSegments: string[],\n  rootSchema: JsonSchema\n): JsonSchema => {\n  if (isEmpty(schema)) {\n    return undefined;\n  }\n\n  if (schema.$ref) {\n    schema = resolveSchema(rootSchema, schema.$ref, rootSchema);\n  }\n\n  if (!pathSegments || pathSegments.length === 0) {\n    return schema;\n  }\n\n  const [segment, ...remainingSegments] = pathSegments;\n\n  if (invalidSegment(segment)) {\n    return resolveSchemaWithSegments(schema, remainingSegments, rootSchema);\n  }\n\n  const singleSegmentResolveSchema = get(schema, segment);\n\n  const resolvedSchema = resolveSchemaWithSegments(\n    singleSegmentResolveSchema,\n    remainingSegments,\n    rootSchema\n  );\n  if (resolvedSchema) {\n    return resolvedSchema;\n  }\n\n  if (segment === 'properties' || segment === 'items') {\n    // Let's try to resolve the path, assuming oneOf/allOf/anyOf/then/else was omitted.\n    // We only do this when traversing an object or array as we want to avoid\n    // following a property which is named oneOf, allOf, anyOf, then or else.\n    let alternativeResolveResult = undefined;\n\n    const subSchemas = [].concat(\n      schema.oneOf ?? [],\n      schema.allOf ?? [],\n      schema.anyOf ?? [],\n      (schema as JsonSchema7).then ?? [],\n      (schema as JsonSchema7).else ?? []\n    );\n\n    for (const subSchema of subSchemas) {\n      alternativeResolveResult = resolveSchemaWithSegments(\n        subSchema,\n        [segment, ...remainingSegments],\n        rootSchema\n      );\n      if (alternativeResolveResult) {\n        break;\n      }\n    }\n    return alternativeResolveResult;\n  }\n\n  return undefined;\n};\n","/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport has from 'lodash/has';\nimport {\n  AndCondition,\n  Condition,\n  JsonSchema,\n  LeafCondition,\n  OrCondition,\n  RuleEffect,\n  SchemaBasedCondition,\n  Scopable,\n  UISchemaElement,\n} from '../models';\nimport { resolveData } from './resolvers';\nimport { composeWithUi } from './path';\nimport type Ajv from 'ajv';\nimport { getAjv } from '../reducers';\nimport type { JsonFormsState } from '../store';\n\nconst isOrCondition = (condition: Condition): condition is OrCondition =>\n  condition.type === 'OR';\n\nconst isAndCondition = (condition: Condition): condition is AndCondition =>\n  condition.type === 'AND';\n\nconst isLeafCondition = (condition: Condition): condition is LeafCondition =>\n  condition.type === 'LEAF';\n\nconst isSchemaCondition = (\n  condition: Condition\n): condition is SchemaBasedCondition => has(condition, 'schema');\n\nconst getConditionScope = (condition: Scopable, path: string): string => {\n  return composeWithUi(condition, path);\n};\n\nconst evaluateCondition = (\n  data: any,\n  condition: Condition,\n  path: string,\n  ajv: Ajv\n): boolean => {\n  if (isAndCondition(condition)) {\n    return condition.conditions.reduce(\n      (acc, cur) => acc && evaluateCondition(data, cur, path, ajv),\n      true\n    );\n  } else if (isOrCondition(condition)) {\n    return condition.conditions.reduce(\n      (acc, cur) => acc || evaluateCondition(data, cur, path, ajv),\n      false\n    );\n  } else if (isLeafCondition(condition)) {\n    const value = resolveData(data, getConditionScope(condition, path));\n    return value === condition.expectedValue;\n  } else if (isSchemaCondition(condition)) {\n    const value = resolveData(data, getConditionScope(condition, path));\n    if (condition.failWhenUndefined && value === undefined) {\n      return false;\n    }\n    return ajv.validate(condition.schema, value) as boolean;\n  } else {\n    // unknown condition\n    return true;\n  }\n};\n\nconst isRuleFulfilled = (\n  uischema: UISchemaElement,\n  data: any,\n  path: string,\n  ajv: Ajv\n): boolean => {\n  const condition = uischema.rule.condition;\n  return evaluateCondition(data, condition, path, ajv);\n};\n\nexport const evalVisibility = (\n  uischema: UISchemaElement,\n  data: any,\n  path: string = undefined,\n  ajv: Ajv\n): boolean => {\n  const fulfilled = isRuleFulfilled(uischema, data, path, ajv);\n\n  switch (uischema.rule.effect) {\n    case RuleEffect.HIDE:\n      return !fulfilled;\n    case RuleEffect.SHOW:\n      return fulfilled;\n    // visible by default\n    default:\n      return true;\n  }\n};\n\nexport const evalEnablement = (\n  uischema: UISchemaElement,\n  data: any,\n  path: string = undefined,\n  ajv: Ajv\n): boolean => {\n  const fulfilled = isRuleFulfilled(uischema, data, path, ajv);\n\n  switch (uischema.rule.effect) {\n    case RuleEffect.DISABLE:\n      return !fulfilled;\n    case RuleEffect.ENABLE:\n      return fulfilled;\n    // enabled by default\n    default:\n      return true;\n  }\n};\n\nexport const hasShowRule = (uischema: UISchemaElement): boolean => {\n  if (\n    uischema.rule &&\n    (uischema.rule.effect === RuleEffect.SHOW ||\n      uischema.rule.effect === RuleEffect.HIDE)\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const hasEnableRule = (uischema: UISchemaElement): boolean => {\n  if (\n    uischema.rule &&\n    (uischema.rule.effect === RuleEffect.ENABLE ||\n      uischema.rule.effect === RuleEffect.DISABLE)\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const isVisible = (\n  uischema: UISchemaElement,\n  data: any,\n  path: string = undefined,\n  ajv: Ajv\n): boolean => {\n  if (uischema.rule) {\n    return evalVisibility(uischema, data, path, ajv);\n  }\n\n  return true;\n};\n\nexport const isEnabled = (\n  uischema: UISchemaElement,\n  data: any,\n  path: string = undefined,\n  ajv: Ajv\n): boolean => {\n  if (uischema.rule) {\n    return evalEnablement(uischema, data, path, ajv);\n  }\n\n  return true;\n};\n\n/**\n * Indicates whether the given `uischema` element shall be enabled or disabled.\n * Checks the global readonly flag, uischema rule, uischema options (including the config),\n * the schema and the enablement indicator of the parent.\n */\nexport const isInherentlyEnabled = (\n  state: JsonFormsState,\n  ownProps: any,\n  uischema: UISchemaElement,\n  schema: (JsonSchema & { readOnly?: boolean }) | undefined,\n  rootData: any,\n  config: any\n) => {\n  if (state?.jsonforms?.readonly) {\n    return false;\n  }\n  if (uischema && hasEnableRule(uischema)) {\n    return isEnabled(uischema, rootData, ownProps?.path, getAjv(state));\n  }\n  if (typeof uischema?.options?.readonly === 'boolean') {\n    return !uischema.options.readonly;\n  }\n  if (typeof uischema?.options?.readOnly === 'boolean') {\n    return !uischema.options.readOnly;\n  }\n  if (typeof config?.readonly === 'boolean') {\n    return !config.readonly;\n  }\n  if (typeof config?.readOnly === 'boolean') {\n    return !config.readOnly;\n  }\n  if (schema?.readOnly === true) {\n    return false;\n  }\n  if (typeof ownProps?.enabled === 'boolean') {\n    return ownProps.enabled;\n  }\n  return true;\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport isEmpty from 'lodash/isEmpty';\nimport isArray from 'lodash/isArray';\nimport includes from 'lodash/includes';\nimport find from 'lodash/find';\nimport type { JsonSchema, Scoped, UISchemaElement } from '..';\nimport { resolveData, resolveSchema } from './resolvers';\nimport { composePaths, toDataPathSegments } from './path';\nimport { isEnabled, isVisible } from './runtime';\nimport type Ajv from 'ajv';\n\n/**\n * Returns the string representation of the given date. The format of the output string can be specified:\n * - 'date' for a date-only string (YYYY-MM-DD),\n * - 'time' for a time-only string (HH:mm:ss), or\n * - 'date-time' for a full date-time string in ISO format (YYYY-MM-DDTHH:mm:ss.sssZ).\n * If no format is specified, the full date-time ISO string is returned by default.\n *\n * @returns {string} A string representation of the date in the specified format.\n *\n * @example\n * // returns '2023-11-09'\n * convertDateToString(new Date('2023-11-09T14:22:54.131Z'), 'date');\n *\n * @example\n * // returns '14:22:54'\n * convertDateToString(new Date('2023-11-09T14:22:54.131Z'), 'time');\n *\n * @example\n * // returns '2023-11-09T14:22:54.131Z'\n * convertDateToString(new Date('2023-11-09T14:22:54.131Z'), 'date-time');\n *\n * @example\n * // returns '2023-11-09T14:22:54.131Z'\n * convertDateToString(new Date('2023-11-09T14:22:54.131Z'));\n */\nexport const convertDateToString = (\n  date: Date,\n  format?: 'date' | 'time' | 'date-time'\n): string => {\n  //e.g. '2023-11-09T14:22:54.131Z'\n  const dateString = date.toISOString();\n  if (format === 'date-time') {\n    return dateString;\n  } else if (format === 'date') {\n    // e.g. '2023-11-09'\n    return dateString.split('T')[0];\n  } else if (format === 'time') {\n    //e.g. '14:22:54'\n    return dateString.split('T')[1].split('.')[0];\n  }\n  return dateString;\n};\n\n/**\n * Escape the given string such that it can be used as a class name,\n * i.e. hashes and slashes will be replaced.\n *\n * @param {string} s the string that should be converted to a valid class name\n * @returns {string} the escaped string\n */\nexport const convertToValidClassName = (s: string): string =>\n  s.replace('#', 'root').replace(new RegExp('/', 'g'), '_');\n\nexport const formatErrorMessage = (errors: string[]) => {\n  if (errors === undefined || errors === null) {\n    return '';\n  }\n\n  return errors.join('\\n');\n};\n\nexport const hasType = (jsonSchema: JsonSchema, expected: string): boolean => {\n  return includes(deriveTypes(jsonSchema), expected);\n};\n\n/**\n * Derives the type of the jsonSchema element\n */\nexport const deriveTypes = (jsonSchema: JsonSchema): string[] => {\n  if (isEmpty(jsonSchema)) {\n    return [];\n  }\n  if (!isEmpty(jsonSchema.type) && typeof jsonSchema.type === 'string') {\n    return [jsonSchema.type];\n  }\n  if (isArray(jsonSchema.type)) {\n    return jsonSchema.type;\n  }\n  if (\n    !isEmpty(jsonSchema.properties) ||\n    !isEmpty(jsonSchema.additionalProperties)\n  ) {\n    return ['object'];\n  }\n  if (!isEmpty(jsonSchema.items)) {\n    return ['array'];\n  }\n  if (!isEmpty(jsonSchema.enum)) {\n    const types: Set<string> = new Set();\n    jsonSchema.enum.forEach((enumElement) => {\n      if (typeof enumElement === 'string') {\n        types.add('string');\n      } else {\n        deriveTypes(enumElement).forEach((type) => types.add(type));\n      }\n    });\n    return Array.from(types);\n  }\n  if (!isEmpty(jsonSchema.allOf)) {\n    const allOfType = find(\n      jsonSchema.allOf,\n      (schema: JsonSchema) => deriveTypes(schema).length !== 0\n    );\n\n    if (allOfType) {\n      return deriveTypes(allOfType);\n    }\n  }\n  // ignore all remaining cases\n  return [];\n};\n\n/**\n * Convenience wrapper around resolveData and resolveSchema.\n */\nexport const Resolve: {\n  schema(\n    schema: JsonSchema,\n    schemaPath: string,\n    rootSchema: JsonSchema\n  ): JsonSchema;\n  data(data: any, path: string): any;\n} = {\n  schema: resolveSchema,\n  data: resolveData,\n};\n\n// Paths --\nconst fromScoped = (scopable: Scoped): string =>\n  toDataPathSegments(scopable.scope).join('.');\n\nexport const Paths = {\n  compose: composePaths,\n  fromScoped,\n};\n\n// Runtime --\nexport const Runtime = {\n  isEnabled(uischema: UISchemaElement, data: any, ajv: Ajv): boolean {\n    return isEnabled(uischema, data, undefined, ajv);\n  },\n  isVisible(uischema: UISchemaElement, data: any, ajv: Ajv): boolean {\n    return isVisible(uischema, data, undefined, ajv);\n  },\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport startCase from 'lodash/startCase';\n\nimport type { ControlElement, JsonSchema, LabelDescription } from '../models';\nimport { decode } from './path';\n\nconst deriveLabel = (\n  controlElement: ControlElement,\n  schemaElement?: JsonSchema\n): string => {\n  if (schemaElement && typeof schemaElement.title === 'string') {\n    return schemaElement.title;\n  }\n  if (typeof controlElement.scope === 'string') {\n    const ref = controlElement.scope;\n    const label = decode(ref.substr(ref.lastIndexOf('/') + 1));\n    return startCase(label);\n  }\n\n  return '';\n};\n\nexport const createCleanLabel = (label: string): string => {\n  return startCase(label.replace('_', ' '));\n};\n\n/**\n * Return a label object based on the given control and schema element.\n * @param {ControlElement} withLabel the UI schema to obtain a label object for\n * @param {JsonSchema} schema optional: the corresponding schema element\n * @returns {LabelDescription}\n */\nexport const createLabelDescriptionFrom = (\n  withLabel: ControlElement,\n  schema?: JsonSchema\n): LabelDescription => {\n  const labelProperty = withLabel.label;\n  if (typeof labelProperty === 'boolean') {\n    return labelDescription(deriveLabel(withLabel, schema), labelProperty);\n  }\n  if (typeof labelProperty === 'string') {\n    return labelDescription(labelProperty, true);\n  }\n  if (typeof labelProperty === 'object') {\n    const label =\n      typeof labelProperty.text === 'string'\n        ? labelProperty.text\n        : deriveLabel(withLabel, schema);\n    const show =\n      typeof labelProperty.show === 'boolean' ? labelProperty.show : true;\n    return labelDescription(label, show);\n  }\n  return labelDescription(deriveLabel(withLabel, schema), true);\n};\n\nconst labelDescription = (text: string, show: boolean): LabelDescription => ({\n  text: text,\n  show: show,\n});\n","/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport get from 'lodash/get';\nimport {\n  ControlElement,\n  isLabelable,\n  JsonSchema,\n  LabelElement,\n  UISchemaElement,\n} from '../models';\nimport find from 'lodash/find';\nimport {\n  getUISchemas,\n  getAjv,\n  getCells,\n  getConfig,\n  getData,\n  getErrorAt,\n  getErrorTranslator,\n  getRenderers,\n  getSchema,\n  getSubErrorsAt,\n  getTranslator,\n  getUiSchema,\n} from '../reducers';\nimport type {\n  JsonFormsCellRendererRegistryEntry,\n  JsonFormsRendererRegistryEntry,\n  JsonFormsUISchemaRegistryEntry,\n} from '../reducers';\nimport type { RankedTester } from '../testers';\nimport { hasShowRule, isInherentlyEnabled, isVisible } from './runtime';\nimport { createLabelDescriptionFrom } from './label';\nimport type { CombinatorKeyword } from './combinators';\nimport { moveDown, moveUp } from './array';\nimport type { AnyAction, Dispatch } from './type';\nimport { Resolve, convertDateToString, hasType } from './util';\nimport { composePaths, composeWithUi } from './path';\nimport { CoreActions, update } from '../actions';\nimport type { ErrorObject } from 'ajv';\nimport type { JsonFormsState } from '../store';\nimport {\n  deriveLabelForUISchemaElement,\n  getCombinedErrorMessage,\n  getI18nKey,\n  getI18nKeyPrefix,\n  getI18nKeyPrefixBySchema,\n  getArrayTranslations,\n  Translator,\n  CombinatorTranslations,\n  getCombinatorTranslations,\n  combinatorDefaultTranslations,\n} from '../i18n';\nimport {\n  arrayDefaultTranslations,\n  ArrayTranslations,\n} from '../i18n/arrayTranslations';\nimport { resolveSchema } from './resolvers';\nimport cloneDeep from 'lodash/cloneDeep';\n\nconst isRequired = (\n  schema: JsonSchema,\n  schemaPath: string,\n  rootSchema: JsonSchema\n): boolean => {\n  const pathSegments = schemaPath.split('/');\n  const lastSegment = pathSegments[pathSegments.length - 1];\n  // Skip \"properties\", \"items\" etc. to resolve the parent\n  const nextHigherSchemaSegments = pathSegments.slice(\n    0,\n    pathSegments.length - 2\n  );\n  const nextHigherSchemaPath = nextHigherSchemaSegments.join('/');\n  const nextHigherSchema = Resolve.schema(\n    schema,\n    nextHigherSchemaPath,\n    rootSchema\n  );\n\n  return (\n    nextHigherSchema !== undefined &&\n    nextHigherSchema.required !== undefined &&\n    nextHigherSchema.required.indexOf(lastSegment) !== -1\n  );\n};\n\n/**\n * Adds an asterisk to the given label string based\n * on the required parameter.\n *\n * @param {string | undefined} label the label string\n * @param {boolean} required whether the label belongs to a control which is required\n * @param {boolean} hideRequiredAsterisk applied UI Schema option\n * @returns {string} the label string\n */\nexport const computeLabel = (\n  label: string | undefined,\n  required: boolean,\n  hideRequiredAsterisk: boolean\n): string => {\n  return `${label ?? ''}${required && !hideRequiredAsterisk ? '*' : ''}`;\n};\n\n/**\n * Indicates whether to mark a field as required.\n *\n * @param {boolean} required whether the label belongs to a control which is required\n * @param {boolean} hideRequiredAsterisk applied UI Schema option\n * @returns {boolean} should the field be marked as required\n */\nexport const showAsRequired = (\n  required: boolean,\n  hideRequiredAsterisk: boolean\n): boolean => {\n  return required && !hideRequiredAsterisk;\n};\n\n/**\n * Create a default value based on the given schema.\n * @param schema the schema for which to create a default value.\n * @returns {any}\n */\nexport const createDefaultValue = (\n  schema: JsonSchema,\n  rootSchema: JsonSchema\n) => {\n  const resolvedSchema = Resolve.schema(schema, schema.$ref, rootSchema);\n  if (resolvedSchema.default !== undefined) {\n    return extractDefaults(resolvedSchema, rootSchema);\n  }\n  if (hasType(resolvedSchema, 'string')) {\n    if (\n      resolvedSchema.format === 'date-time' ||\n      resolvedSchema.format === 'date' ||\n      resolvedSchema.format === 'time'\n    ) {\n      return convertDateToString(new Date(), resolvedSchema.format);\n    }\n    return '';\n  } else if (\n    hasType(resolvedSchema, 'integer') ||\n    hasType(resolvedSchema, 'number')\n  ) {\n    return 0;\n  } else if (hasType(resolvedSchema, 'boolean')) {\n    return false;\n  } else if (hasType(resolvedSchema, 'array')) {\n    return [];\n  } else if (hasType(resolvedSchema, 'object')) {\n    return extractDefaults(resolvedSchema, rootSchema);\n  } else if (hasType(resolvedSchema, 'null')) {\n    return null;\n  } else {\n    return {};\n  }\n};\n\n/**\n * Returns the default value defined in the given schema.\n * @param schema the schema for which to create a default value.\n * @returns {any}\n */\nexport const extractDefaults = (schema: JsonSchema, rootSchema: JsonSchema) => {\n  if (hasType(schema, 'object') && schema.default === undefined) {\n    const result: { [key: string]: any } = {};\n    for (const key in schema.properties) {\n      const property = schema.properties[key];\n      const resolvedProperty = property.$ref\n        ? Resolve.schema(rootSchema, property.$ref, rootSchema)\n        : property;\n      if (resolvedProperty.default !== undefined) {\n        result[key] = cloneDeep(resolvedProperty.default);\n      }\n    }\n    return result;\n  }\n  return cloneDeep(schema.default);\n};\n\n/**\n * Whether an element's description should be hidden.\n *\n * @param visible whether an element is visible\n * @param description the element's description\n * @param isFocused whether the element is focused\n *\n * @returns {boolean} true, if the description is to be hidden, false otherwise\n */\nexport const isDescriptionHidden = (\n  visible: boolean,\n  description: string | undefined,\n  isFocused: boolean,\n  showUnfocusedDescription: boolean\n): boolean => {\n  return (\n    description === undefined ||\n    (description !== undefined && !visible) ||\n    (!showUnfocusedDescription && !isFocused)\n  );\n};\n\nexport interface WithClassname {\n  className?: string;\n}\n\nexport interface EnumOption {\n  label: string;\n  value: any;\n}\n\nexport const enumToEnumOptionMapper = (\n  e: any,\n  t?: Translator,\n  i18nKey?: string\n): EnumOption => {\n  let label = typeof e === 'string' ? e : JSON.stringify(e);\n  if (t) {\n    if (i18nKey) {\n      label = t(`${i18nKey}.${label}`, label);\n    } else {\n      label = t(label, label);\n    }\n  }\n  return { label, value: e };\n};\n\nexport const oneOfToEnumOptionMapper = (\n  e: any,\n  t?: Translator,\n  fallbackI18nKey?: string\n): EnumOption => {\n  let label =\n    e.title ??\n    (typeof e.const === 'string' ? e.const : JSON.stringify(e.const));\n  if (t) {\n    // prefer schema keys as they can be more specialized\n    if (e.i18n) {\n      label = t(e.i18n, label);\n    } else if (fallbackI18nKey) {\n      label = t(`${fallbackI18nKey}.${label}`, label);\n    } else {\n      label = t(label, label);\n    }\n  }\n  return {\n    label,\n    value: e.const,\n  };\n};\n\nexport interface OwnPropsOfRenderer {\n  /**\n   * The UI schema to be rendered.\n   */\n  uischema?: UISchemaElement;\n  /**\n   * The JSON schema that describes the data.\n   */\n  schema?: JsonSchema;\n  /**\n   * Whether the rendered element should be enabled.\n   */\n  enabled?: boolean;\n  /**\n   * Whether the rendered element should be visible.\n   */\n  visible?: boolean;\n\n  /**\n   * Optional instance path. Necessary when the actual data\n   * path can not be inferred via the UI schema element as\n   * it is the case with nested controls.\n   */\n  path?: string;\n\n  renderers?: JsonFormsRendererRegistryEntry[];\n\n  cells?: JsonFormsCellRendererRegistryEntry[];\n\n  uischemas?: JsonFormsUISchemaRegistryEntry[];\n}\n\nexport interface OwnPropsOfControl extends OwnPropsOfRenderer {\n  id?: string;\n  // constraint type\n  uischema?: ControlElement;\n}\n\nexport interface OwnPropsOfLabel extends OwnPropsOfRenderer {\n  uischema?: LabelElement;\n}\n\nexport interface OwnPropsOfEnum {\n  options?: EnumOption[];\n}\n\nexport interface OwnPropsOfLayout extends OwnPropsOfRenderer {\n  direction?: 'row' | 'column';\n}\n\n/**\n * State-based props of a {@link Renderer}.\n */\nexport interface StatePropsOfRenderer {\n  /**\n   * Any configuration options for the element.\n   */\n  config?: any;\n\n  /**\n   * The UI schema to be rendered.\n   */\n  uischema: UISchemaElement;\n\n  /**\n   * The JSON schema that describes the data.\n   */\n  schema: JsonSchema;\n\n  /**\n   * The data to be rendered.\n   */\n  data?: any;\n\n  /**\n   * Whether the rendered element should be enabled.\n   */\n  enabled: boolean;\n  /**\n   * Whether the rendered element should be visible.\n   */\n  visible: boolean;\n\n  /**\n   * Instance path the data is written to, in case of a control.\n   */\n  path: string;\n\n  /**\n   * All available renderers.\n   */\n  renderers?: JsonFormsRendererRegistryEntry[];\n\n  /**\n   * All available cell renderers.\n   */\n\n  cells?: JsonFormsCellRendererRegistryEntry[];\n}\n\n/**\n * State-based properties for UI schema elements that have a scope.\n */\nexport interface StatePropsOfScopedRenderer extends StatePropsOfRenderer {\n  // constraint type\n  uischema: ControlElement;\n\n  /**\n   * Any validation errors that are caused by the data to be rendered.\n   */\n  errors: string;\n\n  /**\n   * The data to be rendered.\n   */\n  data: any;\n\n  /**\n   * The root schema as returned by the store.\n   */\n  rootSchema: JsonSchema;\n\n  /**\n   * A unique ID that should be used for rendering the scoped UI schema element.\n   */\n  id: string;\n}\n\n/**\n * Props of a {@link Renderer}.\n */\nexport interface RendererProps extends StatePropsOfRenderer {}\n\n/**\n * State-based props of a Control\n */\nexport interface StatePropsOfControl extends StatePropsOfScopedRenderer {\n  cells?: { tester: RankedTester; cell: any }[];\n\n  /**\n   * The label for the rendered element.\n   */\n  label: string;\n\n  /**\n   * Description of input cell\n   */\n  description?: string;\n\n  /**\n   * Whether the rendered data is required.\n   */\n  required?: boolean;\n\n  i18nKeyPrefix?: string;\n\n  // TODO: renderers?\n}\n\n/**\n * Dispatch-based props of a Control.\n */\nexport interface DispatchPropsOfControl {\n  /**\n   * Update handler that emits a data change\n   *\n   * @param {string} path the path to the data to be updated\n   * @param {any} value the new value that should be written to the given path\n   */\n  handleChange(path: string, value: any): void;\n}\n\n/**\n * Props of a Control.\n */\nexport interface ControlProps\n  extends StatePropsOfControl,\n    DispatchPropsOfControl {}\n\n/**\n * State props of a layout;\n */\nexport interface StatePropsOfLayout extends StatePropsOfRenderer {\n  /**\n   * Direction for the layout to flow\n   */\n  direction: 'row' | 'column';\n  label?: string;\n}\n\nexport interface LayoutProps extends StatePropsOfLayout {}\n\n/**\n * The state of a control.\n */\nexport interface ControlState {\n  /**\n   * The current value.\n   */\n  value: any;\n\n  /**\n   * Whether the control is focused.\n   */\n  isFocused: boolean;\n}\n\n/**\n * Map state to control props.\n * @param state the store's state\n * @param ownProps any own props\n * @returns {StatePropsOfControl} state props for a control\n */\nexport const mapStateToControlProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfControl\n): StatePropsOfControl => {\n  const { uischema } = ownProps;\n  const rootData = getData(state);\n  const path = composeWithUi(uischema, ownProps.path);\n  const visible: boolean =\n    ownProps.visible === undefined || hasShowRule(uischema)\n      ? isVisible(uischema, rootData, ownProps.path, getAjv(state))\n      : ownProps.visible;\n  const controlElement = uischema as ControlElement;\n  const id = ownProps.id;\n  const rootSchema = getSchema(state);\n  const required =\n    controlElement.scope !== undefined &&\n    isRequired(ownProps.schema, controlElement.scope, rootSchema);\n  const resolvedSchema = Resolve.schema(\n    ownProps.schema || rootSchema,\n    controlElement.scope,\n    rootSchema\n  );\n  const errors = getErrorAt(path, resolvedSchema)(state);\n\n  const description =\n    resolvedSchema !== undefined ? resolvedSchema.description : '';\n  const data = Resolve.data(rootData, path);\n  const labelDesc = createLabelDescriptionFrom(uischema, resolvedSchema);\n  const label = labelDesc.show ? labelDesc.text : '';\n  const config = getConfig(state);\n  const enabled: boolean = isInherentlyEnabled(\n    state,\n    ownProps,\n    uischema,\n    resolvedSchema || rootSchema,\n    rootData,\n    config\n  );\n\n  const schema = resolvedSchema ?? rootSchema;\n  const t = getTranslator()(state);\n  const te = getErrorTranslator()(state);\n  const i18nKeyPrefix = getI18nKeyPrefix(schema, uischema, path);\n  const i18nLabel = t(getI18nKey(schema, uischema, path, 'label'), label, {\n    schema,\n    uischema,\n    path,\n    errors,\n  });\n  const i18nDescription = t(\n    getI18nKey(schema, uischema, path, 'description'),\n    description,\n    { schema, uischema, path, errors }\n  );\n  const i18nErrorMessage = getCombinedErrorMessage(\n    errors,\n    te,\n    t,\n    schema,\n    uischema,\n    path\n  );\n\n  return {\n    data,\n    description: i18nDescription,\n    errors: i18nErrorMessage,\n    label: i18nLabel,\n    visible,\n    enabled,\n    id,\n    path,\n    required,\n    uischema,\n    schema,\n    config: getConfig(state),\n    cells: ownProps.cells || state.jsonforms.cells,\n    rootSchema,\n    i18nKeyPrefix,\n  };\n};\n\n/**\n *\n * Map dispatch to control props.\n *\n * @param dispatch the store's dispatch method\n * @returns {DispatchPropsOfControl} dispatch props for a control\n */\nexport const mapDispatchToControlProps = (\n  dispatch: Dispatch<AnyAction>\n): DispatchPropsOfControl => ({\n  handleChange(path, value) {\n    dispatch(update(path, () => value));\n  },\n});\n\n/**\n * Default mapStateToCellProps for enum control. Options is used for populating dropdown list\n * @param state\n * @param ownProps\n * @returns {StatePropsOfControl & OwnPropsOfEnum}\n */\nexport const mapStateToEnumControlProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfControl & OwnPropsOfEnum\n): StatePropsOfControl & OwnPropsOfEnum => {\n  const props: StatePropsOfControl = mapStateToControlProps(state, ownProps);\n  const options: EnumOption[] =\n    ownProps.options ||\n    props.schema.enum?.map((e) =>\n      enumToEnumOptionMapper(\n        e,\n        getTranslator()(state),\n        getI18nKeyPrefix(props.schema, props.uischema, props.path)\n      )\n    ) ||\n    (props.schema.const && [\n      enumToEnumOptionMapper(\n        props.schema.const,\n        getTranslator()(state),\n        getI18nKeyPrefix(props.schema, props.uischema, props.path)\n      ),\n    ]);\n  return {\n    ...props,\n    options,\n  };\n};\n\n/**\n * Default mapStateToCellProps for enum control based on oneOf. Options is used for populating dropdown list\n * @param state\n * @param ownProps\n * @returns {StatePropsOfControl & OwnPropsOfEnum}\n */\nexport const mapStateToOneOfEnumControlProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfControl & OwnPropsOfEnum\n): StatePropsOfControl & OwnPropsOfEnum => {\n  const props: StatePropsOfControl = mapStateToControlProps(state, ownProps);\n  const options: EnumOption[] =\n    ownProps.options ||\n    (props.schema.oneOf as JsonSchema[])?.map((oneOfSubSchema) =>\n      oneOfToEnumOptionMapper(\n        oneOfSubSchema,\n        getTranslator()(state),\n        getI18nKeyPrefix(props.schema, props.uischema, props.path)\n      )\n    );\n  return {\n    ...props,\n    options,\n  };\n};\n\n/**\n * Default mapStateToCellProps for multi enum control. Options is used for populating dropdown list\n * @param state\n * @param ownProps\n * @returns {StatePropsOfControl & OwnPropsOfEnum}\n */\nexport const mapStateToMultiEnumControlProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfControl & OwnPropsOfEnum\n): StatePropsOfControl & OwnPropsOfEnum => {\n  const props: StatePropsOfControl = mapStateToControlProps(state, ownProps);\n  let items = props.schema.items as JsonSchema;\n  items =\n    items && items.$ref\n      ? resolveSchema(props.rootSchema, items.$ref, props.rootSchema)\n      : items;\n  const options: EnumOption[] =\n    ownProps.options ||\n    (items?.oneOf &&\n      (items.oneOf as JsonSchema[]).map((oneOfSubSchema) =>\n        oneOfToEnumOptionMapper(\n          oneOfSubSchema,\n          state.jsonforms.i18n?.translate,\n          getI18nKeyPrefix(props.schema, props.uischema, props.path)\n        )\n      )) ||\n    items?.enum?.map((e) =>\n      enumToEnumOptionMapper(\n        e,\n        state.jsonforms.i18n?.translate,\n        getI18nKeyPrefix(props.schema, props.uischema, props.path)\n      )\n    );\n  return {\n    ...props,\n    options,\n  };\n};\n\n/**\n * Map state to control props.\n * @param state the store's state\n * @param ownProps any own props\n * @returns {StatePropsOfControl} state props for a control\n */\nexport const mapStateToMasterListItemProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfMasterListItem\n): StatePropsOfMasterItem => {\n  const { schema, path, index } = ownProps;\n  const firstPrimitiveProp = schema.properties\n    ? find(Object.keys(schema.properties), (propName) => {\n        const prop = schema.properties[propName];\n        return (\n          prop.type === 'string' ||\n          prop.type === 'number' ||\n          prop.type === 'integer'\n        );\n      })\n    : undefined;\n  const childPath = composePaths(path, `${index}`);\n  const childData = Resolve.data(getData(state), childPath);\n  const childLabel = firstPrimitiveProp ? childData[firstPrimitiveProp] : '';\n\n  return {\n    ...ownProps,\n    childLabel,\n  };\n};\n\n/**\n * State-based props of a table control.\n */\nexport interface StatePropsOfControlWithDetail extends StatePropsOfControl {\n  uischemas?: JsonFormsUISchemaRegistryEntry[];\n  renderers?: JsonFormsRendererRegistryEntry[];\n  cells?: JsonFormsCellRendererRegistryEntry[];\n}\n\nexport interface OwnPropsOfMasterListItem {\n  index: number;\n  selected: boolean;\n  path: string;\n  enabled: boolean;\n  schema: JsonSchema;\n  handleSelect(index: number): () => void;\n  removeItem(path: string, value: number): () => void;\n  translations: ArrayTranslations;\n}\n\nexport interface StatePropsOfMasterItem extends OwnPropsOfMasterListItem {\n  childLabel: string;\n}\n\n/**\n * Map state to control with detail props\n *\n * @param state the store's state\n * @param ownProps any element's own props\n * @returns {StatePropsOfArrayControl} state props for a table control\n */\nexport const mapStateToControlWithDetailProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfControl\n): StatePropsOfControlWithDetail => {\n  const { ...props } = mapStateToControlProps(state, ownProps);\n\n  return {\n    ...props,\n    uischemas: state.jsonforms.uischemas,\n  };\n};\n\nexport interface ControlWithDetailProps\n  extends StatePropsOfControlWithDetail,\n    DispatchPropsOfControl {}\n\n/**\n * State-based props of a table control.\n */\nexport interface StatePropsOfArrayControl\n  extends StatePropsOfControlWithDetail {\n  translations: ArrayTranslations;\n  childErrors?: ErrorObject[];\n}\n\n/**\n * Map state to table props\n *\n * @param state the store's state\n * @param ownProps any element's own props\n * @returns {StatePropsOfArrayControl} state props for a table control\n */\nexport const mapStateToArrayControlProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfControl\n): StatePropsOfArrayControl => {\n  const { path, schema, uischema, i18nKeyPrefix, label, ...props } =\n    mapStateToControlWithDetailProps(state, ownProps);\n\n  const resolvedSchema = Resolve.schema(schema, 'items', props.rootSchema);\n  const childErrors = getSubErrorsAt(path, resolvedSchema)(state);\n  const t = getTranslator()(state);\n\n  return {\n    ...props,\n    label,\n    path,\n    uischema,\n    schema: resolvedSchema,\n    childErrors,\n    renderers: ownProps.renderers || getRenderers(state),\n    cells: ownProps.cells || getCells(state),\n    translations: getArrayTranslations(\n      t,\n      arrayDefaultTranslations,\n      i18nKeyPrefix,\n      label\n    ),\n  };\n};\n\n/**\n * Dispatch props of a table control\n */\nexport interface DispatchPropsOfArrayControl {\n  addItem(path: string, value: any): () => void;\n  removeItems?(path: string, toDelete: number[]): () => void;\n  moveUp?(path: string, toMove: number): () => void;\n  moveDown?(path: string, toMove: number): () => void;\n}\n\n/**\n * Maps state to dispatch properties of an array control.\n *\n * @param dispatch the store's dispatch method\n * @returns {DispatchPropsOfArrayControl} dispatch props of an array control\n */\nexport const mapDispatchToArrayControlProps = (\n  dispatch: Dispatch<CoreActions>\n): DispatchPropsOfArrayControl => ({\n  addItem: (path: string, value: any) => () => {\n    dispatch(\n      update(path, (array) => {\n        if (array === undefined || array === null) {\n          return [value];\n        }\n\n        array.push(value);\n        return array;\n      })\n    );\n  },\n  removeItems: (path: string, toDelete: number[]) => () => {\n    dispatch(\n      update(path, (array) => {\n        toDelete\n          .sort((a, b) => a - b)\n          .reverse()\n          .forEach((s) => array.splice(s, 1));\n        return array;\n      })\n    );\n  },\n  moveUp: (path, toMove: number) => () => {\n    dispatch(\n      update(path, (array) => {\n        moveUp(array, toMove);\n        return array;\n      })\n    );\n  },\n  moveDown: (path, toMove: number) => () => {\n    dispatch(\n      update(path, (array) => {\n        moveDown(array, toMove);\n        return array;\n      })\n    );\n  },\n});\n\nexport interface DispatchPropsOfMultiEnumControl {\n  addItem: (path: string, value: any) => void;\n  removeItem?: (path: string, toDelete: any) => void;\n}\n\nexport const mapDispatchToMultiEnumProps = (\n  dispatch: Dispatch<CoreActions>\n): DispatchPropsOfMultiEnumControl => ({\n  addItem: (path: string, value: any) => {\n    dispatch(\n      update(path, (data) => {\n        if (data === undefined || data === null) {\n          return [value];\n        }\n        data.push(value);\n        return data;\n      })\n    );\n  },\n  removeItem: (path: string, toDelete: any) => {\n    dispatch(\n      update(path, (data) => {\n        const indexInData = data.indexOf(toDelete);\n        data.splice(indexInData, 1);\n        return data;\n      })\n    );\n  },\n});\n\n/**\n * Props of an array control.\n */\nexport interface ArrayControlProps\n  extends StatePropsOfArrayControl,\n    DispatchPropsOfArrayControl {}\n\nexport const layoutDefaultProps: {\n  visible: boolean;\n  enabled: boolean;\n  path: string;\n  direction: 'row' | 'column';\n} = {\n  visible: true,\n  enabled: true,\n  path: '',\n  direction: 'column',\n};\n\nconst getDirection = (uischema: UISchemaElement) => {\n  if (uischema.type === 'HorizontalLayout') {\n    return 'row';\n  }\n  if (uischema.type === 'VerticalLayout') {\n    return 'column';\n  }\n  return layoutDefaultProps.direction;\n};\n\n/**\n * Map state to layout props.\n * @param state JSONForms state tree\n * @param ownProps any own props\n * @returns {StatePropsOfLayout}\n */\nexport const mapStateToLayoutProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfLayout\n): LayoutProps => {\n  const rootData = getData(state);\n  const { uischema } = ownProps;\n  const visible: boolean =\n    ownProps.visible === undefined || hasShowRule(uischema)\n      ? isVisible(ownProps.uischema, rootData, ownProps.path, getAjv(state))\n      : ownProps.visible;\n\n  const data = Resolve.data(rootData, ownProps.path);\n  const config = getConfig(state);\n  const enabled: boolean = isInherentlyEnabled(\n    state,\n    ownProps,\n    uischema,\n    undefined, // layouts have no associated schema\n    rootData,\n    config\n  );\n\n  // some layouts have labels which might need to be translated\n  const t = getTranslator()(state);\n  const label = isLabelable(uischema)\n    ? deriveLabelForUISchemaElement(uischema, t)\n    : undefined;\n\n  return {\n    ...layoutDefaultProps,\n    renderers: ownProps.renderers || getRenderers(state),\n    cells: ownProps.cells || getCells(state),\n    visible,\n    enabled,\n    path: ownProps.path,\n    data,\n    uischema: ownProps.uischema,\n    schema: ownProps.schema,\n    direction: ownProps.direction ?? getDirection(uischema),\n    config,\n    label,\n  };\n};\n\nexport type RefResolver = (schema: JsonSchema) => Promise<JsonSchema>;\n\nexport interface OwnPropsOfJsonFormsRenderer extends OwnPropsOfRenderer {}\n\nexport interface StatePropsOfJsonFormsRenderer\n  extends OwnPropsOfJsonFormsRenderer {\n  rootSchema: JsonSchema;\n  config: any;\n}\n\nexport interface JsonFormsProps extends StatePropsOfJsonFormsRenderer {}\n\nexport const mapStateToJsonFormsRendererProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfJsonFormsRenderer\n): StatePropsOfJsonFormsRenderer => {\n  return {\n    renderers: ownProps.renderers || get(state.jsonforms, 'renderers'),\n    cells: ownProps.cells || get(state.jsonforms, 'cells'),\n    schema: ownProps.schema || getSchema(state),\n    rootSchema: getSchema(state),\n    uischema: ownProps.uischema || getUiSchema(state),\n    path: ownProps.path,\n    enabled: ownProps.enabled,\n    config: getConfig(state),\n  };\n};\n\nexport const controlDefaultProps = {\n  ...layoutDefaultProps,\n  errors: [] as string[],\n};\n\nexport interface StatePropsOfCombinator extends StatePropsOfControl {\n  rootSchema: JsonSchema;\n  path: string;\n  id: string;\n  indexOfFittingSchema: number;\n  uischemas: JsonFormsUISchemaRegistryEntry[];\n  data: any;\n  translations: CombinatorTranslations;\n}\n\nexport const mapStateToCombinatorRendererProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfControl,\n  keyword: CombinatorKeyword\n): StatePropsOfCombinator => {\n  const { data, schema, rootSchema, i18nKeyPrefix, label, ...props } =\n    mapStateToControlProps(state, ownProps);\n\n  const ajv = state.jsonforms.core.ajv;\n  const t = getTranslator()(state);\n  const translations = getCombinatorTranslations(\n    t,\n    combinatorDefaultTranslations,\n    i18nKeyPrefix,\n    label\n  );\n  const structuralKeywords = [\n    'required',\n    'additionalProperties',\n    'type',\n    'enum',\n    'const',\n  ];\n  const dataIsValid = (errors: ErrorObject[]): boolean => {\n    return (\n      !errors ||\n      errors.length === 0 ||\n      !errors.find((e) => structuralKeywords.indexOf(e.keyword) !== -1)\n    );\n  };\n  let indexOfFittingSchema: number;\n  // TODO instead of compiling the combinator subschemas we can compile the original schema\n  // without the combinator alternatives and then revalidate and check the errors for the\n  // element\n  for (let i = 0; i < schema[keyword]?.length; i++) {\n    try {\n      let _schema = schema[keyword][i];\n      if (_schema.$ref) {\n        _schema = Resolve.schema(rootSchema, _schema.$ref, rootSchema);\n      }\n      const valFn = ajv.compile(_schema);\n      valFn(data);\n      if (dataIsValid(valFn.errors)) {\n        indexOfFittingSchema = i;\n        break;\n      }\n    } catch (error) {\n      console.debug(\n        \"Combinator subschema is not self contained, can't hand it over to AJV\"\n      );\n    }\n  }\n\n  return {\n    data,\n    schema,\n    rootSchema,\n    ...props,\n    i18nKeyPrefix,\n    label,\n    indexOfFittingSchema,\n    uischemas: getUISchemas(state),\n    translations,\n  };\n};\n\nexport interface CombinatorRendererProps\n  extends StatePropsOfCombinator,\n    DispatchPropsOfControl {}\n/**\n * Map state to all of renderer props.\n * @param state the store's state\n * @param ownProps any own props\n * @returns {StatePropsOfCombinator} state props for a combinator\n */\nexport const mapStateToAllOfProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfControl\n): StatePropsOfCombinator =>\n  mapStateToCombinatorRendererProps(state, ownProps, 'allOf');\n\nexport const mapStateToAnyOfProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfControl\n): StatePropsOfCombinator => {\n  return mapStateToCombinatorRendererProps(state, ownProps, 'anyOf');\n};\n\nexport const mapStateToOneOfProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfControl\n): StatePropsOfCombinator => {\n  return mapStateToCombinatorRendererProps(state, ownProps, 'oneOf');\n};\n\nexport interface StatePropsOfArrayLayout extends StatePropsOfControlWithDetail {\n  data: number;\n  translations: ArrayTranslations;\n  minItems?: number;\n}\n/**\n * Map state to table props\n *\n * @param state the store's state\n * @param ownProps any element's own props\n * @returns {StatePropsOfArrayControl} state props for a table control\n */\nexport const mapStateToArrayLayoutProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfControl\n): StatePropsOfArrayLayout => {\n  const { path, schema, uischema, errors, i18nKeyPrefix, label, ...props } =\n    mapStateToControlWithDetailProps(state, ownProps);\n\n  const resolvedSchema = Resolve.schema(schema, 'items', props.rootSchema);\n  const t = getTranslator()(state);\n  // TODO Does not consider 'i18n' keys which are specified in the ui schemas of the sub errors\n  const childErrors = getCombinedErrorMessage(\n    getSubErrorsAt(path, resolvedSchema)(state),\n    getErrorTranslator()(state),\n    t,\n    undefined,\n    undefined,\n    undefined\n  );\n\n  const allErrors =\n    errors +\n    (errors.length > 0 && childErrors.length > 0 ? '\\n' : '') +\n    childErrors;\n  return {\n    ...props,\n    label,\n    path,\n    uischema,\n    schema: resolvedSchema,\n    data: props.data ? props.data.length : 0,\n    errors: allErrors,\n    minItems: schema.minItems,\n    translations: getArrayTranslations(\n      t,\n      arrayDefaultTranslations,\n      i18nKeyPrefix,\n      label\n    ),\n  };\n};\n\n/**\n * Props of an array control.\n */\nexport interface ArrayLayoutProps\n  extends StatePropsOfArrayLayout,\n    DispatchPropsOfArrayControl {}\n\nexport interface StatePropsOfLabel extends StatePropsOfRenderer {\n  text?: string;\n}\nexport interface LabelProps extends StatePropsOfLabel {}\n\nexport const mapStateToLabelProps = (\n  state: JsonFormsState,\n  props: OwnPropsOfLabel\n) => {\n  const { uischema } = props;\n\n  const visible: boolean =\n    props.visible === undefined || hasShowRule(uischema)\n      ? isVisible(props.uischema, getData(state), props.path, getAjv(state))\n      : props.visible;\n\n  const text = uischema.text;\n  const t = getTranslator()(state);\n  const i18nKeyPrefix = getI18nKeyPrefixBySchema(undefined, uischema);\n  const i18nKey = i18nKeyPrefix ? `${i18nKeyPrefix}.text` : text ?? '';\n  const i18nText = t(i18nKey, text, { uischema });\n\n  return {\n    text: i18nText,\n    visible,\n    config: getConfig(state),\n    renderers: props.renderers || getRenderers(state),\n    cells: props.cells || getCells(state),\n  };\n};\n","/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport isEmpty from 'lodash/isEmpty';\nimport {\n  getErrorTranslator,\n  getAjv,\n  getConfig,\n  getData,\n  getErrorAt,\n  getSchema,\n  getTranslator,\n} from '../reducers';\nimport type { JsonFormsCellRendererRegistryEntry } from '../reducers';\nimport type { AnyAction, Dispatch } from './type';\nimport { Resolve } from './util';\nimport { isInherentlyEnabled, isVisible } from './runtime';\nimport {\n  DispatchPropsOfControl,\n  EnumOption,\n  enumToEnumOptionMapper,\n  mapDispatchToControlProps,\n  oneOfToEnumOptionMapper,\n  OwnPropsOfControl,\n  OwnPropsOfEnum,\n  StatePropsOfScopedRenderer,\n} from './renderer';\nimport { getCombinedErrorMessage, getI18nKeyPrefix } from '../i18n';\nimport type { JsonFormsState } from '../store';\nimport type { JsonSchema } from '../models';\n\nexport interface OwnPropsOfCell extends OwnPropsOfControl {\n  data?: any;\n}\n\n/**\n * State props of a cell.\n */\nexport interface StatePropsOfCell extends StatePropsOfScopedRenderer {\n  isValid: boolean;\n  rootSchema: JsonSchema;\n}\n\nexport interface OwnPropsOfEnumCell extends OwnPropsOfCell, OwnPropsOfEnum {}\n\n/**\n * State props of a cell for enum cell\n */\nexport interface StatePropsOfEnumCell\n  extends StatePropsOfCell,\n    OwnPropsOfEnum {}\n\n/**\n * Props of an enum cell.\n */\nexport interface EnumCellProps\n  extends StatePropsOfEnumCell,\n    DispatchPropsOfControl {}\n\nexport type DispatchPropsOfCell = DispatchPropsOfControl;\n\n/**\n * Props of a cell.\n */\nexport interface CellProps extends StatePropsOfCell, DispatchPropsOfCell {}\n/**\n * Registers the given cell renderer when a JSON Forms store is created.\n * @param {RankedTester} tester\n * @param cell the cell to be registered\n * @returns {any}\n */\nexport interface DispatchCellStateProps extends StatePropsOfCell {\n  cells?: JsonFormsCellRendererRegistryEntry[];\n}\n\n/**\n * Map state to cell props.\n *\n * @param state JSONForms state tree\n * @param ownProps any own props\n * @returns {StatePropsOfCell} state props of a cell\n */\nexport const mapStateToCellProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfCell\n): StatePropsOfCell => {\n  const { id, schema, path, uischema, renderers, cells } = ownProps;\n  const rootData = getData(state);\n  const visible =\n    ownProps.visible !== undefined\n      ? ownProps.visible\n      : isVisible(uischema, rootData, undefined, getAjv(state));\n\n  const rootSchema = getSchema(state);\n  const config = getConfig(state);\n\n  /* When determining the enabled state of cells we take a shortcut: At the\n   * moment it's only possible to configure enablement and disablement at the\n   * control level. Therefore the renderer using the cell, for example a\n   * table renderer, determines whether a cell is enabled and should hand\n   * over the prop themselves. If that prop was given, we prefer it over\n   * anything else to save evaluation effort (except for the global readonly\n   * flag). For example it would be quite expensive to evaluate the same ui schema\n   * rule again and again for each cell of a table. */\n  let enabled;\n  if (state.jsonforms.readonly === true) {\n    enabled = false;\n  } else if (typeof ownProps.enabled === 'boolean') {\n    enabled = ownProps.enabled;\n  } else {\n    enabled = isInherentlyEnabled(\n      state,\n      ownProps,\n      uischema,\n      schema || rootSchema,\n      rootData,\n      config\n    );\n  }\n\n  const t = getTranslator()(state);\n  const te = getErrorTranslator()(state);\n  const errors = getCombinedErrorMessage(\n    getErrorAt(path, schema)(state),\n    te,\n    t,\n    schema,\n    uischema,\n    path\n  );\n  const isValid = isEmpty(errors);\n\n  return {\n    data: Resolve.data(rootData, path),\n    visible,\n    enabled,\n    id,\n    path,\n    errors,\n    isValid,\n    schema,\n    uischema,\n    config: getConfig(state),\n    rootSchema,\n    renderers,\n    cells,\n  };\n};\n\nexport const mapStateToDispatchCellProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfCell\n): DispatchCellStateProps => {\n  const props: StatePropsOfCell = mapStateToCellProps(state, ownProps);\n  const { renderers: _renderers, cells, ...otherOwnProps } = ownProps;\n  return {\n    ...props,\n    ...otherOwnProps,\n    cells: cells || state.jsonforms.cells || [],\n  };\n};\n\nexport interface DispatchCellProps extends DispatchCellStateProps {}\n\n/**\n * Default mapStateToCellProps for enum cell. Options is used for populating dropdown list\n * @param state\n * @param ownProps\n * @returns {StatePropsOfEnumCell}\n */\nexport const defaultMapStateToEnumCellProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfEnumCell\n): StatePropsOfEnumCell => {\n  const props: StatePropsOfCell = mapStateToCellProps(state, ownProps);\n  const options: EnumOption[] =\n    ownProps.options ||\n    props.schema.enum?.map((e) =>\n      enumToEnumOptionMapper(\n        e,\n        getTranslator()(state),\n        getI18nKeyPrefix(props.schema, props.uischema, props.path)\n      )\n    ) ||\n    (props.schema.const && [\n      enumToEnumOptionMapper(\n        props.schema.const,\n        getTranslator()(state),\n        getI18nKeyPrefix(props.schema, props.uischema, props.path)\n      ),\n    ]);\n  return {\n    ...props,\n    options,\n  };\n};\n\n/**\n * mapStateToOneOfEnumCellProps for one of enum cell. Options is used for populating dropdown list from oneOf\n * @param state\n * @param ownProps\n * @returns {StatePropsOfEnumCell}\n */\nexport const mapStateToOneOfEnumCellProps = (\n  state: JsonFormsState,\n  ownProps: OwnPropsOfEnumCell\n): StatePropsOfEnumCell => {\n  const props: StatePropsOfCell = mapStateToCellProps(state, ownProps);\n  const options: EnumOption[] =\n    ownProps.options ||\n    (props.schema.oneOf as JsonSchema[])?.map((oneOfSubSchema) =>\n      oneOfToEnumOptionMapper(\n        oneOfSubSchema,\n        getTranslator()(state),\n        getI18nKeyPrefix(props.schema, props.uischema, props.path)\n      )\n    );\n  return {\n    ...props,\n    options,\n  };\n};\n\n/**\n * Synonym for mapDispatchToControlProps.\n *\n * @type {(dispatch) => {handleChange(path, value): void}}\n */\nexport const mapDispatchToCellProps: (\n  dispatch: Dispatch<AnyAction>\n) => DispatchPropsOfControl = mapDispatchToControlProps;\n\n/**\n * Default dispatch to control props which can be customized to set handleChange action\n *\n */\nexport const defaultMapDispatchToControlProps =\n  // TODO: ownProps types\n  (dispatch: Dispatch<AnyAction>, ownProps: any): DispatchPropsOfControl => {\n    const { handleChange } = mapDispatchToCellProps(dispatch);\n\n    return {\n      handleChange: ownProps.handleChange || handleChange,\n    };\n  };\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport type { ControlElement, JsonSchema, UISchemaElement } from '../models';\nimport { findUISchema, JsonFormsUISchemaRegistryEntry } from '../reducers';\nimport { Resolve } from './util';\n\nexport interface CombinatorSubSchemaRenderInfo {\n  schema: JsonSchema;\n  uischema: UISchemaElement;\n  label: string;\n}\n\nexport type CombinatorKeyword = 'anyOf' | 'oneOf' | 'allOf';\n\nexport const createCombinatorRenderInfos = (\n  combinatorSubSchemas: JsonSchema[],\n  rootSchema: JsonSchema,\n  keyword: CombinatorKeyword,\n  control: ControlElement,\n  path: string,\n  uischemas: JsonFormsUISchemaRegistryEntry[]\n): CombinatorSubSchemaRenderInfo[] =>\n  combinatorSubSchemas.map((subSchema, subSchemaIndex) => {\n    const resolvedSubSchema =\n      subSchema.$ref && Resolve.schema(rootSchema, subSchema.$ref, rootSchema);\n\n    const schema = resolvedSubSchema ?? subSchema;\n\n    return {\n      schema,\n      uischema: findUISchema(\n        uischemas,\n        schema,\n        control.scope,\n        path,\n        undefined,\n        control,\n        rootSchema\n      ),\n      label:\n        subSchema.title ??\n        resolvedSubSchema?.title ??\n        `${keyword}-${subSchemaIndex}`,\n    };\n  });\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nconst usedIds: Set<string> = new Set<string>();\n\nconst makeId = (idBase: string, iteration: number) =>\n  iteration <= 1 ? idBase : idBase + iteration.toString();\n\nconst isUniqueId = (idBase: string, iteration: number) => {\n  const newID = makeId(idBase, iteration);\n  return !usedIds.has(newID);\n};\n\nexport const createId = (proposedId: string) => {\n  if (proposedId === undefined) {\n    // failsafe to avoid endless loops in error cases\n    proposedId = 'undefined';\n  }\n  let tries = 0;\n  while (!isUniqueId(proposedId, tries)) {\n    tries++;\n  }\n  const newID = makeId(proposedId, tries);\n  usedIds.add(newID);\n  return newID;\n};\n\nexport const removeId = (id: string) => usedIds.delete(id);\n\nexport const clearAllIds = () => usedIds.clear();\n","/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport find from 'lodash/find';\nimport { JsonSchema } from '../models';\n\nexport const getFirstPrimitiveProp = (schema: any) => {\n  if (schema.properties) {\n    return find(Object.keys(schema.properties), (propName) => {\n      const prop = schema.properties[propName];\n      return (\n        prop.type === 'string' ||\n        prop.type === 'number' ||\n        prop.type === 'integer'\n      );\n    });\n  }\n  return undefined;\n};\n\n/**\n * Tests whether the schema has an enum based on oneOf.\n */\nexport const isOneOfEnumSchema = (schema: JsonSchema) =>\n  !!schema &&\n  Object.prototype.hasOwnProperty.call(schema, 'oneOf') &&\n  schema.oneOf &&\n  (schema.oneOf as JsonSchema[]).every((s) => s.const !== undefined);\n","/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport isEmpty from 'lodash/isEmpty';\nimport { isLayout, UISchemaElement } from '../models';\n\nexport type IterateCallback = (uischema: UISchemaElement) => void;\n\nconst setReadonlyPropertyValue =\n  (value: boolean): IterateCallback =>\n  (child: UISchemaElement): void => {\n    if (!child.options) {\n      child.options = {};\n    }\n    child.options.readonly = value;\n  };\nexport const setReadonly = (uischema: UISchemaElement): void => {\n  iterateSchema(uischema, setReadonlyPropertyValue(true));\n};\nexport const unsetReadonly = (uischema: UISchemaElement): void => {\n  iterateSchema(uischema, setReadonlyPropertyValue(false));\n};\nexport const iterateSchema = (\n  uischema: UISchemaElement,\n  toApply: IterateCallback\n): void => {\n  if (isEmpty(uischema)) {\n    return;\n  }\n  if (isLayout(uischema)) {\n    uischema.elements.forEach((child) => iterateSchema(child, toApply));\n    return;\n  }\n  toApply(uischema);\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\nimport Ajv from 'ajv';\nimport addFormats from 'ajv-formats';\nimport type { Options } from 'ajv';\n\nexport const createAjv = (options?: Options) => {\n  const ajv = new Ajv({\n    allErrors: true,\n    verbose: true,\n    strict: false,\n    addUsedSchema: false,\n    ...options,\n  });\n  addFormats(ajv);\n  return ajv;\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2023-2023 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nexport const defaultDateFormat = 'YYYY-MM-DD';\nexport const defaultTimeFormat = 'HH:mm:ss';\nexport const defaultDateTimeFormat = 'YYYY-MM-DDTHH:mm:ss.sssZ';\n","/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport isEmpty from 'lodash/isEmpty';\nimport startCase from 'lodash/startCase';\nimport keys from 'lodash/keys';\nimport {\n  ControlElement,\n  isGroup,\n  isLayout,\n  JsonSchema,\n  LabelElement,\n  Layout,\n  UISchemaElement,\n} from '../models';\nimport { deriveTypes, encode, resolveSchema } from '../util';\n\n/**\n * Creates a new ILayout.\n * @param layoutType The type of the laoyut\n * @returns the new ILayout\n */\nconst createLayout = (layoutType: string): Layout => ({\n  type: layoutType,\n  elements: [],\n});\n\n/**\n * Creates a IControlObject with the given label referencing the given ref\n */\nexport const createControlElement = (ref: string): ControlElement => ({\n  type: 'Control',\n  scope: ref,\n});\n\n/**\n * Wraps the given {@code uiSchema} in a Layout if there is none already.\n * @param uischema The ui schema to wrap in a layout.\n * @param layoutType The type of the layout to create.\n * @returns the wrapped uiSchema.\n */\nconst wrapInLayoutIfNecessary = (\n  uischema: UISchemaElement,\n  layoutType: string\n): Layout => {\n  if (!isEmpty(uischema) && !isLayout(uischema)) {\n    const verticalLayout: Layout = createLayout(layoutType);\n    verticalLayout.elements.push(uischema);\n\n    return verticalLayout;\n  }\n\n  return uischema as Layout;\n};\n\n/**\n * Adds the given {@code labelName} to the {@code layout} if it exists\n * @param layout\n *      The layout which is to receive the label\n * @param labelName\n *      The name of the schema\n */\nconst addLabel = (layout: Layout, labelName: string) => {\n  if (!isEmpty(labelName)) {\n    const fixedLabel = startCase(labelName);\n    if (isGroup(layout)) {\n      layout.label = fixedLabel;\n    } else {\n      // add label with name\n      const label: LabelElement = {\n        type: 'Label',\n        text: fixedLabel,\n      };\n      layout.elements.push(label);\n    }\n  }\n};\n\n/**\n * Returns whether the given {@code jsonSchema} is a combinator ({@code oneOf}, {@code anyOf}, {@code allOf}) at the root level\n * @param jsonSchema\n *      the schema to check\n */\nconst isCombinator = (jsonSchema: JsonSchema): boolean => {\n  return (\n    !isEmpty(jsonSchema) &&\n    (!isEmpty(jsonSchema.oneOf) ||\n      !isEmpty(jsonSchema.anyOf) ||\n      !isEmpty(jsonSchema.allOf))\n  );\n};\n\nconst generateUISchema = (\n  jsonSchema: JsonSchema,\n  schemaElements: UISchemaElement[],\n  currentRef: string,\n  schemaName: string,\n  layoutType: string,\n  rootSchema?: JsonSchema\n): UISchemaElement => {\n  if (!isEmpty(jsonSchema) && jsonSchema.$ref !== undefined) {\n    return generateUISchema(\n      resolveSchema(rootSchema, jsonSchema.$ref, rootSchema),\n      schemaElements,\n      currentRef,\n      schemaName,\n      layoutType,\n      rootSchema\n    );\n  }\n\n  if (isCombinator(jsonSchema)) {\n    const controlObject: ControlElement = createControlElement(currentRef);\n    schemaElements.push(controlObject);\n\n    return controlObject;\n  }\n\n  const types = deriveTypes(jsonSchema);\n  if (types.length === 0) {\n    return null;\n  }\n\n  if (types.length > 1) {\n    const controlObject: ControlElement = createControlElement(currentRef);\n    schemaElements.push(controlObject);\n    return controlObject;\n  }\n\n  if (currentRef === '#' && types[0] === 'object') {\n    const layout: Layout = createLayout(layoutType);\n    schemaElements.push(layout);\n\n    if (jsonSchema.properties && keys(jsonSchema.properties).length > 1) {\n      addLabel(layout, schemaName);\n    }\n\n    if (!isEmpty(jsonSchema.properties)) {\n      // traverse properties\n      const nextRef: string = currentRef + '/properties';\n      Object.keys(jsonSchema.properties).map((propName) => {\n        let value = jsonSchema.properties[propName];\n        const ref = `${nextRef}/${encode(propName)}`;\n        if (value.$ref !== undefined) {\n          value = resolveSchema(rootSchema, value.$ref, rootSchema);\n        }\n        generateUISchema(\n          value,\n          layout.elements,\n          ref,\n          propName,\n          layoutType,\n          rootSchema\n        );\n      });\n    }\n\n    return layout;\n  }\n\n  switch (types[0]) {\n    case 'object': // object items will be handled by the object control itself\n    /* falls through */\n    case 'array': // array items will be handled by the array control itself\n    /* falls through */\n    case 'string':\n    /* falls through */\n    case 'number':\n    /* falls through */\n    case 'integer':\n    /* falls through */\n    case 'null':\n    /* falls through */\n    case 'boolean': {\n      const controlObject: ControlElement = createControlElement(currentRef);\n      schemaElements.push(controlObject);\n\n      return controlObject;\n    }\n    default:\n      throw new Error('Unknown type: ' + JSON.stringify(jsonSchema));\n  }\n};\n\n/**\n * Generate a default UI schema.\n * @param {JsonSchema} jsonSchema the JSON schema to generated a UI schema for\n * @param {string} layoutType the desired layout type for the root layout\n *        of the generated UI schema\n */\nexport const generateDefaultUISchema = (\n  jsonSchema: JsonSchema,\n  layoutType = 'VerticalLayout',\n  prefix = '#',\n  rootSchema = jsonSchema\n): UISchemaElement =>\n  wrapInLayoutIfNecessary(\n    generateUISchema(jsonSchema, [], prefix, '', layoutType, rootSchema),\n    layoutType\n  );\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport { generateJsonSchema } from './schema';\nimport { createControlElement, generateDefaultUISchema } from './uischema';\nimport type { ControlElement, JsonSchema, UISchemaElement } from '../';\n\nexport const Generate: {\n  // TODO fix @typescript-eslint/ban-types\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  jsonSchema(instance: Object, options?: any): JsonSchema;\n  uiSchema(\n    jsonSchema: JsonSchema,\n    layoutType?: string,\n    prefix?: string,\n    rootSchema?: JsonSchema\n  ): UISchemaElement;\n  controlElement(ref: string): ControlElement;\n} = {\n  jsonSchema: generateJsonSchema,\n  uiSchema: generateDefaultUISchema,\n  controlElement: createControlElement,\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport type AJV from 'ajv';\nimport type { ErrorObject } from 'ajv';\nimport type { JsonSchema, UISchemaElement } from '../models';\nimport { generateDefaultUISchema, generateJsonSchema } from '../generators';\n\nimport type { RankedTester } from '../testers';\nimport type { UISchemaTester, ValidationMode } from '../reducers';\nimport type { ErrorTranslator, Translator } from '../i18n';\n\nexport const INIT = 'jsonforms/INIT' as const;\nexport const UPDATE_CORE = 'jsonforms/UPDATE_CORE' as const;\nexport const SET_AJV = 'jsonforms/SET_AJV' as const;\nexport const UPDATE_DATA = 'jsonforms/UPDATE' as const;\nexport const UPDATE_ERRORS = 'jsonforms/UPDATE_ERRORS' as const;\nexport const VALIDATE = 'jsonforms/VALIDATE' as const;\nexport const ADD_RENDERER = 'jsonforms/ADD_RENDERER' as const;\nexport const REMOVE_RENDERER = 'jsonforms/REMOVE_RENDERER' as const;\nexport const ADD_CELL = 'jsonforms/ADD_CELL' as const;\nexport const REMOVE_CELL = 'jsonforms/REMOVE_CELL' as const;\nexport const SET_CONFIG = 'jsonforms/SET_CONFIG' as const;\nexport const ADD_UI_SCHEMA = 'jsonforms/ADD_UI_SCHEMA' as const;\nexport const REMOVE_UI_SCHEMA = 'jsonforms/REMOVE_UI_SCHEMA' as const;\nexport const SET_SCHEMA = 'jsonforms/SET_SCHEMA' as const;\nexport const SET_UISCHEMA = 'jsonforms/SET_UISCHEMA' as const;\nexport const SET_VALIDATION_MODE = 'jsonforms/SET_VALIDATION_MODE' as const;\n\nexport const SET_LOCALE = 'jsonforms/SET_LOCALE' as const;\nexport const SET_TRANSLATOR = 'jsonforms/SET_TRANSLATOR' as const;\nexport const UPDATE_I18N = 'jsonforms/UPDATE_I18N' as const;\n\nexport const ADD_DEFAULT_DATA = 'jsonforms/ADD_DEFAULT_DATA' as const;\nexport const REMOVE_DEFAULT_DATA = 'jsonforms/REMOVE_DEFAULT_DATA' as const;\n\nexport type CoreActions =\n  | InitAction\n  | UpdateCoreAction\n  | UpdateAction\n  | UpdateErrorsAction\n  | SetAjvAction\n  | SetSchemaAction\n  | SetUISchemaAction\n  | SetValidationModeAction;\n\nexport interface UpdateAction {\n  type: 'jsonforms/UPDATE';\n  path: string;\n  updater(existingData?: any): any;\n}\n\nexport interface UpdateErrorsAction {\n  type: 'jsonforms/UPDATE_ERRORS';\n  errors: ErrorObject[];\n}\n\nexport interface InitAction {\n  type: 'jsonforms/INIT';\n  data: any;\n  schema: JsonSchema;\n  uischema: UISchemaElement;\n  options?: InitActionOptions | AJV;\n}\n\nexport interface UpdateCoreAction {\n  type: 'jsonforms/UPDATE_CORE';\n  data?: any;\n  schema?: JsonSchema;\n  uischema?: UISchemaElement;\n  options?: InitActionOptions | AJV;\n}\n\nexport interface InitActionOptions {\n  ajv?: AJV;\n  validationMode?: ValidationMode;\n  additionalErrors?: ErrorObject[];\n}\n\nexport interface SetValidationModeAction {\n  type: 'jsonforms/SET_VALIDATION_MODE';\n  validationMode: ValidationMode;\n}\n\nexport const init = (\n  data: any,\n  schema: JsonSchema = generateJsonSchema(data),\n  uischema?: UISchemaElement,\n  options?: InitActionOptions | AJV\n) => ({\n  type: INIT,\n  data,\n  schema,\n  uischema:\n    typeof uischema === 'object' ? uischema : generateDefaultUISchema(schema),\n  options,\n});\n\nexport const updateCore = (\n  data: any,\n  schema: JsonSchema,\n  uischema?: UISchemaElement,\n  options?: AJV | InitActionOptions\n): UpdateCoreAction => ({\n  type: UPDATE_CORE,\n  data,\n  schema,\n  uischema,\n  options,\n});\n\nexport interface RegisterDefaultDataAction {\n  type: 'jsonforms/ADD_DEFAULT_DATA';\n  schemaPath: string;\n  data: any;\n}\n\nexport const registerDefaultData = (schemaPath: string, data: any) => ({\n  type: ADD_DEFAULT_DATA,\n  schemaPath,\n  data,\n});\n\nexport interface UnregisterDefaultDataAction {\n  type: 'jsonforms/REMOVE_DEFAULT_DATA';\n  schemaPath: string;\n}\n\nexport const unregisterDefaultData = (schemaPath: string) => ({\n  type: REMOVE_DEFAULT_DATA,\n  schemaPath,\n});\n\nexport interface SetAjvAction {\n  type: 'jsonforms/SET_AJV';\n  ajv: AJV;\n}\n\nexport const setAjv = (ajv: AJV) => ({\n  type: SET_AJV,\n  ajv,\n});\n\nexport const update = (\n  path: string,\n  updater: (existingData: any) => any\n): UpdateAction => ({\n  type: UPDATE_DATA,\n  path,\n  updater,\n});\n\nexport const updateErrors = (errors: ErrorObject[]): UpdateErrorsAction => ({\n  type: UPDATE_ERRORS,\n  errors,\n});\n\nexport interface AddRendererAction {\n  type: 'jsonforms/ADD_RENDERER';\n  tester: RankedTester;\n  renderer: any;\n}\n\nexport const registerRenderer = (tester: RankedTester, renderer: any) => ({\n  type: ADD_RENDERER,\n  tester,\n  renderer,\n});\n\nexport interface AddCellRendererAction {\n  type: 'jsonforms/ADD_CELL';\n  tester: RankedTester;\n  cell: any;\n}\n\nexport const registerCell = (tester: RankedTester, cell: any) => ({\n  type: ADD_CELL,\n  tester,\n  cell,\n});\n\nexport interface RemoveCellRendererAction {\n  type: 'jsonforms/REMOVE_CELL';\n  tester: RankedTester;\n  cell: any;\n}\n\nexport const unregisterCell = (tester: RankedTester, cell: any) => ({\n  type: REMOVE_CELL,\n  tester,\n  cell,\n});\n\nexport interface RemoveRendererAction {\n  type: 'jsonforms/REMOVE_RENDERER';\n  tester: RankedTester;\n  renderer: any;\n}\n\nexport const unregisterRenderer = (tester: RankedTester, renderer: any) => ({\n  type: REMOVE_RENDERER,\n  tester,\n  renderer,\n});\n\nexport interface SetConfigAction {\n  type: 'jsonforms/SET_CONFIG';\n  config: any;\n}\n\nexport const setConfig = (config: any): SetConfigAction => ({\n  type: SET_CONFIG,\n  config,\n});\n\nexport const setValidationMode = (\n  validationMode: ValidationMode\n): SetValidationModeAction => ({\n  type: SET_VALIDATION_MODE,\n  validationMode,\n});\n\nexport type UISchemaActions = AddUISchemaAction | RemoveUISchemaAction;\n\nexport interface AddUISchemaAction {\n  type: 'jsonforms/ADD_UI_SCHEMA';\n  tester: UISchemaTester;\n  uischema: UISchemaElement;\n}\n\nexport const registerUISchema = (\n  tester: UISchemaTester,\n  uischema: UISchemaElement\n): AddUISchemaAction => {\n  return {\n    type: ADD_UI_SCHEMA,\n    tester,\n    uischema,\n  };\n};\n\nexport interface RemoveUISchemaAction {\n  type: 'jsonforms/REMOVE_UI_SCHEMA';\n  tester: UISchemaTester;\n}\n\nexport const unregisterUISchema = (\n  tester: UISchemaTester\n): RemoveUISchemaAction => {\n  return {\n    type: REMOVE_UI_SCHEMA,\n    tester,\n  };\n};\n\nexport type I18nActions =\n  | SetLocaleAction\n  | SetTranslatorAction\n  | UpdateI18nAction;\n\nexport interface SetLocaleAction {\n  type: 'jsonforms/SET_LOCALE';\n  locale: string | undefined;\n}\n\nexport const setLocale = (locale: string | undefined): SetLocaleAction => ({\n  type: SET_LOCALE,\n  locale,\n});\n\nexport interface SetSchemaAction {\n  type: 'jsonforms/SET_SCHEMA';\n  schema: JsonSchema;\n}\n\nexport const setSchema = (schema: JsonSchema): SetSchemaAction => ({\n  type: SET_SCHEMA,\n  schema,\n});\n\nexport interface SetTranslatorAction {\n  type: 'jsonforms/SET_TRANSLATOR';\n  translator?: Translator;\n  errorTranslator?: ErrorTranslator;\n}\n\nexport const setTranslator = (\n  translator?: Translator,\n  errorTranslator?: ErrorTranslator\n): SetTranslatorAction => ({\n  type: SET_TRANSLATOR,\n  translator,\n  errorTranslator,\n});\n\nexport interface UpdateI18nAction {\n  type: 'jsonforms/UPDATE_I18N';\n  locale: string | undefined;\n  translator: Translator | undefined;\n  errorTranslator: ErrorTranslator | undefined;\n}\n\nexport const updateI18n = (\n  locale: string | undefined,\n  translator: Translator | undefined,\n  errorTranslator: ErrorTranslator | undefined\n): UpdateI18nAction => ({\n  type: UPDATE_I18N,\n  locale,\n  translator,\n  errorTranslator,\n});\n\nexport interface SetUISchemaAction {\n  type: 'jsonforms/SET_UISCHEMA';\n  uischema: UISchemaElement;\n}\n\nexport const setUISchema = (uischema: UISchemaElement): SetUISchemaAction => ({\n  type: SET_UISCHEMA,\n  uischema,\n});\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport { convertToValidClassName, createLabelDescriptionFrom } from './util';\nimport type { ControlElement, JsonSchema, LabelDescription } from './models';\n\nexport const Helpers: {\n  createLabelDescriptionFrom(\n    withLabel: ControlElement,\n    schema: JsonSchema\n  ): LabelDescription;\n  convertToValidClassName(s: string): string;\n} = {\n  createLabelDescriptionFrom,\n  convertToValidClassName,\n};\n"],"names":["RuleEffect","merge","isFunction","isEqual","cloneDeep","get","setFp","unsetFp","filter","isObjectSchema","ArrayTranslationEnum","CombinatorTranslationEnum","isEmpty","endsWith","last","isArray","reduce","toPairs","includes","remove","maxBy","range","has","find","composePaths","startCase","Ajv","addFormats","keys"],"mappings":"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"}