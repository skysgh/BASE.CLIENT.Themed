import { Component, ElementRef, Input, Inject, ChangeDetectorRef, } from '@angular/core';
import { Icons } from './icons.provider';
import { uppercamelcase } from './utils';
import * as i0 from "@angular/core";
import * as i1 from "./icons.provider";
export class FeatherComponent {
    constructor(elem, changeDetector, icons) {
        this.elem = elem;
        this.changeDetector = changeDetector;
        this.icons = icons;
    }
    ngOnChanges(changes) {
        // icons are provided as an array of objects because of "multi: true"
        const icons = Object.assign({}, ...this.icons);
        const svg = icons[uppercamelcase(changes.name.currentValue)] || '';
        if (!svg) {
            console.warn(`Icon not found: ${changes.name.currentValue}\n` +
                `Refer to documentation on https://github.com/michaelbazos/angular-feather`);
        }
        this.elem.nativeElement.innerHTML = svg;
        this.changeDetector.markForCheck();
    }
}
FeatherComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: FeatherComponent, deps: [{ token: ElementRef }, { token: ChangeDetectorRef }, { token: Icons }], target: i0.ɵɵFactoryTarget.Component });
FeatherComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.4", type: FeatherComponent, selector: "i-feather, feather-icon", inputs: { name: "name" }, usesOnChanges: true, ngImport: i0, template: "<ng-content></ng-content>\n", styles: [":host{display:inline-block;width:24px;height:24px;fill:none;stroke:currentColor;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.4", ngImport: i0, type: FeatherComponent, decorators: [{
            type: Component,
            args: [{ selector: 'i-feather, feather-icon', template: "<ng-content></ng-content>\n", styles: [":host{display:inline-block;width:24px;height:24px;fill:none;stroke:currentColor;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }, { type: i1.Icons, decorators: [{
                    type: Inject,
                    args: [Icons]
                }] }]; }, propDecorators: { name: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdGhlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyLWZlYXRoZXIvc3JjL2xpYi9mZWF0aGVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItZmVhdGhlci9zcmMvbGliL2ZlYXRoZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxVQUFVLEVBQ1YsS0FBSyxFQUNMLE1BQU0sRUFDTixpQkFBaUIsR0FHbEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3pDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxTQUFTLENBQUM7OztBQU96QyxNQUFNLE9BQU8sZ0JBQWdCO0lBRzNCLFlBQzhCLElBQWdCLEVBQ1QsY0FBaUMsRUFDN0MsS0FBWTtRQUZQLFNBQUksR0FBSixJQUFJLENBQVk7UUFDVCxtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7UUFDN0MsVUFBSyxHQUFMLEtBQUssQ0FBTztJQUNsQyxDQUFDO0lBRUosV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLHFFQUFxRTtRQUNyRSxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxHQUFJLElBQUksQ0FBQyxLQUF5QixDQUFDLENBQUM7UUFDcEUsTUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO1FBRW5FLElBQUksQ0FBQyxHQUFHLEVBQUU7WUFDUixPQUFPLENBQUMsSUFBSSxDQUNWLG1CQUFtQixPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVksSUFBSTtnQkFDOUMsMkVBQTJFLENBQzlFLENBQUM7U0FDSDtRQUVELElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUM7UUFDeEMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNyQyxDQUFDOzs2R0F2QlUsZ0JBQWdCLGtCQUlqQixVQUFVLGFBQ1YsaUJBQWlCLGFBQ2pCLEtBQUs7aUdBTkosZ0JBQWdCLDhHQ2pCN0IsNkJBQ0E7MkZEZ0JhLGdCQUFnQjtrQkFMNUIsU0FBUzsrQkFDRSx5QkFBeUI7OzBCQVFoQyxNQUFNOzJCQUFDLFVBQVU7OzBCQUNqQixNQUFNOzJCQUFDLGlCQUFpQjs7MEJBQ3hCLE1BQU07MkJBQUMsS0FBSzs0Q0FMTixJQUFJO3NCQUFaLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIElucHV0LFxuICBJbmplY3QsXG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBPbkNoYW5nZXMsXG4gIFNpbXBsZUNoYW5nZXMsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWNvbnMgfSBmcm9tICcuL2ljb25zLnByb3ZpZGVyJztcbmltcG9ydCB7IHVwcGVyY2FtZWxjYXNlIH0gZnJvbSAnLi91dGlscyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ktZmVhdGhlciwgZmVhdGhlci1pY29uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ZlYXRoZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9mZWF0aGVyLmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIEZlYXRoZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBASW5wdXQoKSBuYW1lITogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoRWxlbWVudFJlZikgcHJpdmF0ZSBlbGVtOiBFbGVtZW50UmVmLFxuICAgIEBJbmplY3QoQ2hhbmdlRGV0ZWN0b3JSZWYpIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmLFxuICAgIEBJbmplY3QoSWNvbnMpIHByaXZhdGUgaWNvbnM6IEljb25zXG4gICkge31cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgLy8gaWNvbnMgYXJlIHByb3ZpZGVkIGFzIGFuIGFycmF5IG9mIG9iamVjdHMgYmVjYXVzZSBvZiBcIm11bHRpOiB0cnVlXCJcbiAgICBjb25zdCBpY29ucyA9IE9iamVjdC5hc3NpZ24oe30sIC4uLih0aGlzLmljb25zIGFzIGFueSBhcyBvYmplY3RbXSkpO1xuICAgIGNvbnN0IHN2ZyA9IGljb25zW3VwcGVyY2FtZWxjYXNlKGNoYW5nZXMubmFtZS5jdXJyZW50VmFsdWUpXSB8fCAnJztcblxuICAgIGlmICghc3ZnKSB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgIGBJY29uIG5vdCBmb3VuZDogJHtjaGFuZ2VzLm5hbWUuY3VycmVudFZhbHVlfVxcbmAgK1xuICAgICAgICAgIGBSZWZlciB0byBkb2N1bWVudGF0aW9uIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNoYWVsYmF6b3MvYW5ndWxhci1mZWF0aGVyYFxuICAgICAgKTtcbiAgICB9XG5cbiAgICB0aGlzLmVsZW0ubmF0aXZlRWxlbWVudC5pbm5lckhUTUwgPSBzdmc7XG4gICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5tYXJrRm9yQ2hlY2soKTtcbiAgfVxufVxuIiwiPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuIl19