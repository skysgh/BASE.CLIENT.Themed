import { NgModule } from '@angular/core';
import { NgxEchartsDirective, NGX_ECHARTS_CONFIG, } from './ngx-echarts.directive';
import * as i0 from "@angular/core";
const provideEcharts = () => {
    return {
        provide: NGX_ECHARTS_CONFIG,
        useFactory: () => ({ echarts: () => import('echarts') }),
    };
};
const provideEchartsCore = (config) => {
    return {
        provide: NGX_ECHARTS_CONFIG,
        useValue: config,
    };
};
export class NgxEchartsModule {
    static forRoot(config) {
        return {
            ngModule: NgxEchartsModule,
            providers: [provideEchartsCore(config)],
        };
    }
    static forChild() {
        return {
            ngModule: NgxEchartsModule,
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsModule, imports: [NgxEchartsDirective], exports: [NgxEchartsDirective] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsModule }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [NgxEchartsDirective],
                    exports: [NgxEchartsDirective],
                }]
        }] });
export { NgxEchartsDirective, NGX_ECHARTS_CONFIG, provideEcharts, provideEchartsCore };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWVjaGFydHMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWVjaGFydHMvc3JjL2xpYi9uZ3gtZWNoYXJ0cy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBaUMsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUNMLG1CQUFtQixFQUVuQixrQkFBa0IsR0FFbkIsTUFBTSx5QkFBeUIsQ0FBQzs7QUFFakMsTUFBTSxjQUFjLEdBQUcsR0FBYSxFQUFFO0lBQ3BDLE9BQU87UUFDTCxPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLFVBQVUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDO0tBQ3pELENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLGtCQUFrQixHQUFHLENBQUMsTUFBd0IsRUFBWSxFQUFFO0lBQ2hFLE9BQU87UUFDTCxPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLFFBQVEsRUFBRSxNQUFNO0tBQ2pCLENBQUM7QUFDSixDQUFDLENBQUM7QUFNRixNQUFNLE9BQU8sZ0JBQWdCO0lBQzNCLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBd0I7UUFDckMsT0FBTztZQUNMLFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsU0FBUyxFQUFFLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEMsQ0FBQztJQUNKLENBQUM7SUFDRCxNQUFNLENBQUMsUUFBUTtRQUNiLE9BQU87WUFDTCxRQUFRLEVBQUUsZ0JBQWdCO1NBQzNCLENBQUM7SUFDSixDQUFDOzhHQVhVLGdCQUFnQjsrR0FBaEIsZ0JBQWdCLFlBSGpCLG1CQUFtQixhQUNuQixtQkFBbUI7K0dBRWxCLGdCQUFnQjs7MkZBQWhCLGdCQUFnQjtrQkFKNUIsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztvQkFDOUIsT0FBTyxFQUFFLENBQUMsbUJBQW1CLENBQUM7aUJBQy9COztBQWVELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxrQkFBa0IsRUFBZSxjQUFjLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgTmd4RWNoYXJ0c0RpcmVjdGl2ZSxcbiAgTmd4RWNoYXJ0c0NvbmZpZyxcbiAgTkdYX0VDSEFSVFNfQ09ORklHLFxuICBUaGVtZU9wdGlvbixcbn0gZnJvbSAnLi9uZ3gtZWNoYXJ0cy5kaXJlY3RpdmUnO1xuXG5jb25zdCBwcm92aWRlRWNoYXJ0cyA9ICgpOiBQcm92aWRlciA9PiB7XG4gIHJldHVybiB7XG4gICAgcHJvdmlkZTogTkdYX0VDSEFSVFNfQ09ORklHLFxuICAgIHVzZUZhY3Rvcnk6ICgpID0+ICh7IGVjaGFydHM6ICgpID0+IGltcG9ydCgnZWNoYXJ0cycpIH0pLFxuICB9O1xufTtcblxuY29uc3QgcHJvdmlkZUVjaGFydHNDb3JlID0gKGNvbmZpZzogTmd4RWNoYXJ0c0NvbmZpZyk6IFByb3ZpZGVyID0+IHtcbiAgcmV0dXJuIHtcbiAgICBwcm92aWRlOiBOR1hfRUNIQVJUU19DT05GSUcsXG4gICAgdXNlVmFsdWU6IGNvbmZpZyxcbiAgfTtcbn07XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtOZ3hFY2hhcnRzRGlyZWN0aXZlXSxcbiAgZXhwb3J0czogW05neEVjaGFydHNEaXJlY3RpdmVdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ3hFY2hhcnRzTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoY29uZmlnOiBOZ3hFY2hhcnRzQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hFY2hhcnRzTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOZ3hFY2hhcnRzTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbcHJvdmlkZUVjaGFydHNDb3JlKGNvbmZpZyldLFxuICAgIH07XG4gIH1cbiAgc3RhdGljIGZvckNoaWxkKCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Tmd4RWNoYXJ0c01vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RWNoYXJ0c01vZHVsZSxcbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCB7IE5neEVjaGFydHNEaXJlY3RpdmUsIE5HWF9FQ0hBUlRTX0NPTkZJRywgVGhlbWVPcHRpb24sIHByb3ZpZGVFY2hhcnRzLCBwcm92aWRlRWNoYXJ0c0NvcmUgfTtcbiJdfQ==